#pragma version 10
#pragma typetrack false

// tests.artifacts.BoxContract.contract.BoxContract.__algopy_entrypoint_with_init() -> uint64:
main:
    bytecblock 0x6f6361 0x74786e
    // tests/artifacts/BoxContract/contract.py:4
    // class BoxContract(ARC4Contract):
    txn NumAppArgs
    bz main___algopy_default_create@9
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0xf26c6d42 0xef186cf7 // method "store_enums()void", method "read_enums()(uint64,uint64)"
    txna ApplicationArgs 0
    match store_enums read_enums
    err

main___algopy_default_create@9:
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating


// tests.artifacts.BoxContract.contract.BoxContract.store_enums[routing]() -> void:
store_enums:
    // tests/artifacts/BoxContract/contract.py:11
    // self.oca.value = OnCompleteAction.OptIn
    pushint 1 // OptIn
    itob
    bytec_0 // "oca"
    swap
    box_put
    // tests/artifacts/BoxContract/contract.py:12
    // self.txn.value = TransactionType.ApplicationCall
    pushint 6 // appl
    itob
    bytec_1 // "txn"
    swap
    box_put
    // tests/artifacts/BoxContract/contract.py:9
    // @arc4.abimethod()
    pushint 1 // 1
    return


// tests.artifacts.BoxContract.contract.BoxContract.read_enums[routing]() -> void:
read_enums:
    // tests/artifacts/BoxContract/contract.py:16
    // assert op.Box.get(b"oca")[0] == op.itob(self.oca.value)
    bytec_0 // 0x6f6361
    box_get
    assert // check self.oca exists
    dup
    btoi
    itob
    swap
    dig 1
    ==
    assert
    // tests/artifacts/BoxContract/contract.py:17
    // assert op.Box.get(b"txn")[0] == op.itob(self.txn.value)
    bytec_1 // 0x74786e
    box_get
    assert // check self.txn exists
    dup
    btoi
    itob
    swap
    dig 1
    ==
    assert
    // tests/artifacts/BoxContract/contract.py:19
    // return arc4.Tuple((arc4.UInt64(self.oca.value), arc4.UInt64(self.txn.value)))
    concat
    // tests/artifacts/BoxContract/contract.py:14
    // @arc4.abimethod()
    pushbytes 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return
