{
    "name": "BoxContract",
    "structs": {
        "InnerStruct": [
            {
                "name": "c",
                "type": "uint64"
            },
            {
                "name": "arr_arr",
                "type": "uint64[][]"
            },
            {
                "name": "d",
                "type": "uint64"
            }
        ],
        "LargeStruct": [
            {
                "name": "a",
                "type": "byte[1024]"
            },
            {
                "name": "b",
                "type": "byte[1024]"
            },
            {
                "name": "c",
                "type": "byte[1024]"
            },
            {
                "name": "d",
                "type": "byte[1024]"
            },
            {
                "name": "e",
                "type": "uint64"
            },
            {
                "name": "f",
                "type": "byte[1024]"
            },
            {
                "name": "g",
                "type": "byte[1024]"
            },
            {
                "name": "h",
                "type": "uint64"
            }
        ],
        "NestedStruct": [
            {
                "name": "a",
                "type": "uint64"
            },
            {
                "name": "inner",
                "type": "InnerStruct"
            },
            {
                "name": "woah",
                "type": "(uint64,uint64[][],uint64)[]"
            },
            {
                "name": "b",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "store_enums",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "read_enums",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_boxes",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                },
                {
                    "type": "string",
                    "name": "c"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "boxes_exist",
            "args": [],
            "returns": {
                "type": "(bool,bool,bool,bool)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_keys",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "read_boxes",
            "args": [],
            "returns": {
                "type": "(uint64,byte[],string,uint64)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "indirect_extract_and_replace",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "delete_boxes",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "slice_box",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "arc4_box",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "create_many_ints",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_many_ints",
            "args": [
                {
                    "type": "uint64",
                    "name": "index"
                },
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "sum_many_ints",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "test_box_ref",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_nested_struct",
            "args": [
                {
                    "type": "(uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64)",
                    "struct": "NestedStruct",
                    "name": "struct"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "nested_write",
            "args": [
                {
                    "type": "uint64",
                    "name": "index"
                },
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "nested_read",
            "args": [
                {
                    "type": "uint64",
                    "name": "i1"
                },
                {
                    "type": "uint64",
                    "name": "i2"
                },
                {
                    "type": "uint64",
                    "name": "i3"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "create_bools",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_bool",
            "args": [
                {
                    "type": "uint64",
                    "name": "index"
                },
                {
                    "type": "bool",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "sum_bools",
            "args": [
                {
                    "type": "uint64",
                    "name": "stop_at_total"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "box_map_test",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "box_map_set",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                },
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "box_map_get",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "box_map_del",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "box_map_exists",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {
                "oca": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "b2Nh"
                },
                "txn": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "dHhu"
                },
                "box_a": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "Ym94X2E="
                },
                "box_b": {
                    "keyType": "AVMString",
                    "valueType": "byte[]",
                    "key": "Yg=="
                },
                "box_c": {
                    "keyType": "AVMBytes",
                    "valueType": "string",
                    "key": "Qk9YX0M="
                },
                "box_d": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Ym94X2Q="
                },
                "many_ints": {
                    "keyType": "AVMString",
                    "valueType": "uint64[513]",
                    "key": "bWFueV9pbnRz"
                },
                "box_ref": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Ym94X3JlZg=="
                },
                "box_large": {
                    "keyType": "AVMString",
                    "valueType": "LargeStruct",
                    "key": "Ym94X2xhcmdl"
                },
                "too_many_bools": {
                    "keyType": "AVMString",
                    "valueType": "bool[33000]",
                    "key": "dG9vX21hbnlfYm9vbHM="
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "box_map": {
                    "keyType": "uint64",
                    "valueType": "AVMString",
                    "prefix": ""
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        133
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        359
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        842
                    ],
                    "errorMessage": "check Box exists"
                },
                {
                    "pc": [
                        488
                    ],
                    "errorMessage": "check self.box_a exists"
                },
                {
                    "pc": [
                        851
                    ],
                    "errorMessage": "check self.box_b exists"
                },
                {
                    "pc": [
                        516,
                        857
                    ],
                    "errorMessage": "check self.box_c exists"
                },
                {
                    "pc": [
                        1930
                    ],
                    "errorMessage": "check self.box_map entry exists"
                },
                {
                    "pc": [
                        1176
                    ],
                    "errorMessage": "check self.many_ints exists"
                },
                {
                    "pc": [
                        380
                    ],
                    "errorMessage": "check self.oca exists"
                },
                {
                    "pc": [
                        1793
                    ],
                    "errorMessage": "check self.too_many_bools exists"
                },
                {
                    "pc": [
                        392
                    ],
                    "errorMessage": "check self.txn exists"
                },
                {
                    "pc": [
                        1771
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        1396,
                        1423,
                        1490,
                        1515,
                        1537,
                        1585,
                        1612,
                        1658,
                        1683,
                        1708
                    ],
                    "errorMessage": "index out of bounds"
                },
                {
                    "pc": [
                        1226
                    ],
                    "errorMessage": "no data"
                },
                {
                    "pc": [
                        1327
                    ],
                    "errorMessage": "struct.a is truthy"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "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",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 3,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {}
}