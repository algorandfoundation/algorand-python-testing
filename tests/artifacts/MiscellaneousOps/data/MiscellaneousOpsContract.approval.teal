#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1 0
    bytecblock 0x151f7c75 0x151f7c750020 0x00
    // tests/artifacts/MiscellaneousOps/contract.py:4
    // class MiscellaneousOpsContract(ARC4Contract):
    txn NumAppArgs
    bz main___algopy_default_create@44
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0x45847eea 0xf57aceb5 0x7d631730 0xa1b24441 0xcd7be1ac 0x7cfda64b 0x54a910d9 0xc46568de 0x7a46a6ae 0x04372209 0x7e5f6d72 0x24ebcf84 0x9c0b3397 0x0ad40da4 0x95178870 0xdeedc99b 0xab2150bb 0x02a54017 0x3db66b41 0x6e3ff38c 0x8f3b9f18 0x16166f9a 0x2f472065 0xd5a739c3 0x61f3b3e1 0x56cf368b 0x919ffbd2 0xaae8b697 0x847422b1 0xd5260327 0x114c8c6d 0x39e9e62a 0xd6a4c05e 0x1ef8151a 0x66dd7f96 0x4d9eceb2 0x19ba70ee // method "verify_addw(uint64,uint64)(uint64,uint64)", method "verify_base64_decode_standard(byte[])byte[]", method "verify_base64_decode_url(byte[])byte[]", method "verify_bytes_bitlen(byte[],uint64)uint64", method "verify_uint64_bitlen(uint64)uint64", method "verify_bsqrt(byte[])byte[]", method "verify_btoi(byte[])uint64", method "verify_bzero(uint64)byte[]", method "verify_concat(byte[],byte[],uint64,uint64)byte[]", method "verify_divmodw(uint64,uint64,uint64,uint64)(uint64,uint64,uint64,uint64)", method "verify_divw(uint64,uint64,uint64)uint64", method "verify_err()void", method "verify_exp(uint64,uint64)uint64", method "verify_expw(uint64,uint64)(uint64,uint64)", method "verify_extract(byte[],uint64,uint64)byte[]", method "verify_extract_from_2(byte[])byte[]", method "verify_extract_uint16(byte[],uint64)uint64", method "verify_extract_uint32(byte[],uint64)uint64", method "verify_extract_uint64(byte[],uint64)uint64", method "verify_getbit_bytes(byte[],uint64)bool", method "verify_getbit_uint64(uint64,uint64)bool", method "verify_getbyte(byte[],uint64)uint64", method "verify_itob(uint64)byte[]", method "verify_mulw(uint64,uint64)(uint64,uint64)", method "verify_replace(byte[],uint64,byte[])byte[]", method "verify_select_bytes(byte[],byte[],uint64)byte[]", method "verify_select_uint64(uint64,uint64,uint64)uint64", method "verify_setbit_bytes(byte[],uint64,bool)byte[]", method "verify_setbit_uint64(uint64,uint64,bool)uint64", method "verify_setbyte(byte[],uint64,uint64)byte[]", method "verify_shl(uint64,uint64)uint64", method "verify_shr(uint64,uint64)uint64", method "verify_sqrt(uint64)uint64", method "verify_substring(byte[],uint64,uint64)byte[]", method "verify_json_ref_string(byte[],byte[])byte[]", method "verify_json_ref_uint64(byte[],byte[])uint64", method "verify_json_ref_object(byte[],byte[])byte[]"
    txna ApplicationArgs 0
    match verify_addw verify_base64_decode_standard verify_base64_decode_url verify_bytes_bitlen verify_uint64_bitlen verify_bsqrt verify_btoi verify_bzero verify_concat verify_divmodw verify_divw main_verify_err_route@15 verify_exp verify_expw verify_extract verify_extract_from_2 verify_extract_uint16 verify_extract_uint32 verify_extract_uint64 verify_getbit_bytes verify_getbit_uint64 verify_getbyte verify_itob verify_mulw verify_replace verify_select_bytes verify_select_uint64 verify_setbit_bytes verify_setbit_uint64 verify_setbyte verify_shl verify_shr verify_sqrt verify_substring verify_json_ref_string verify_json_ref_uint64 verify_json_ref_object
    err

main_verify_err_route@15:
    // tests/artifacts/MiscellaneousOps/contract.py:69
    // op.err()
    err

main___algopy_default_create@44:
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_addw[routing]() -> void:
verify_addw:
    // tests/artifacts/MiscellaneousOps/contract.py:5
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:7
    // result = op.addw(a, b)
    addw
    // tests/artifacts/MiscellaneousOps/contract.py:5
    // @arc4.abimethod()
    swap
    itob
    swap
    itob
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_base64_decode_standard[routing]() -> void:
verify_base64_decode_standard:
    // tests/artifacts/MiscellaneousOps/contract.py:10
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/MiscellaneousOps/contract.py:12
    // result = op.base64_decode(op.Base64.StdEncoding, a)
    base64_decode StdEncoding
    // tests/artifacts/MiscellaneousOps/contract.py:10
    // @arc4.abimethod()
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_base64_decode_url[routing]() -> void:
verify_base64_decode_url:
    // tests/artifacts/MiscellaneousOps/contract.py:15
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/MiscellaneousOps/contract.py:17
    // result = op.base64_decode(op.Base64.URLEncoding, a)
    base64_decode URLEncoding
    // tests/artifacts/MiscellaneousOps/contract.py:15
    // @arc4.abimethod()
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_bytes_bitlen[routing]() -> void:
verify_bytes_bitlen:
    // tests/artifacts/MiscellaneousOps/contract.py:20
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:22
    // a = op.bzero(pad_a_size) + a
    bzero
    swap
    concat
    // tests/artifacts/MiscellaneousOps/contract.py:23
    // result = op.bitlen(a)
    bitlen
    // tests/artifacts/MiscellaneousOps/contract.py:20
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_uint64_bitlen[routing]() -> void:
verify_uint64_bitlen:
    // tests/artifacts/MiscellaneousOps/contract.py:26
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:28
    // result = op.bitlen(a)
    bitlen
    // tests/artifacts/MiscellaneousOps/contract.py:26
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_bsqrt[routing]() -> void:
verify_bsqrt:
    // tests/artifacts/MiscellaneousOps/contract.py:31
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/MiscellaneousOps/contract.py:34
    // result = op.bsqrt(a_biguint)
    bsqrt
    // tests/artifacts/MiscellaneousOps/contract.py:31
    // @arc4.abimethod()
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_btoi[routing]() -> void:
verify_btoi:
    // tests/artifacts/MiscellaneousOps/contract.py:37
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/MiscellaneousOps/contract.py:39
    // result = op.btoi(a)
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:37
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_bzero[routing]() -> void:
verify_bzero:
    // tests/artifacts/MiscellaneousOps/contract.py:42
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:44
    // result = op.bzero(a)
    bzero
    // tests/artifacts/MiscellaneousOps/contract.py:45
    // return op.sha256(result)
    sha256
    // tests/artifacts/MiscellaneousOps/contract.py:42
    // @arc4.abimethod()
    bytec_1 // 0x151f7c750020
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_concat[routing]() -> void:
verify_concat:
    // tests/artifacts/MiscellaneousOps/contract.py:47
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    txna ApplicationArgs 3
    btoi
    txna ApplicationArgs 4
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:49
    // a = op.bzero(pad_a_size) + a
    swap
    bzero
    uncover 3
    concat
    // tests/artifacts/MiscellaneousOps/contract.py:50
    // b = op.bzero(pad_b_size) + b
    swap
    bzero
    uncover 2
    concat
    // tests/artifacts/MiscellaneousOps/contract.py:51
    // result = a + b
    concat
    // tests/artifacts/MiscellaneousOps/contract.py:52
    // result = op.sha256(result)
    sha256
    // tests/artifacts/MiscellaneousOps/contract.py:47
    // @arc4.abimethod()
    bytec_1 // 0x151f7c750020
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_divmodw[routing]() -> void:
verify_divmodw:
    // tests/artifacts/MiscellaneousOps/contract.py:55
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    txna ApplicationArgs 4
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:59
    // result = op.divmodw(a, b, c, d)
    divmodw
    // tests/artifacts/MiscellaneousOps/contract.py:55
    // @arc4.abimethod()
    uncover 3
    itob
    uncover 3
    itob
    concat
    uncover 2
    itob
    concat
    swap
    itob
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_divw[routing]() -> void:
verify_divw:
    // tests/artifacts/MiscellaneousOps/contract.py:62
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:64
    // result = op.divw(a, b, c)
    divw
    // tests/artifacts/MiscellaneousOps/contract.py:62
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_exp[routing]() -> void:
verify_exp:
    // tests/artifacts/MiscellaneousOps/contract.py:71
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:73
    // result = op.exp(a, b)
    exp
    // tests/artifacts/MiscellaneousOps/contract.py:71
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_expw[routing]() -> void:
verify_expw:
    // tests/artifacts/MiscellaneousOps/contract.py:76
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:78
    // result = op.expw(a, b)
    expw
    // tests/artifacts/MiscellaneousOps/contract.py:76
    // @arc4.abimethod()
    swap
    itob
    swap
    itob
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_extract[routing]() -> void:
verify_extract:
    // tests/artifacts/MiscellaneousOps/contract.py:81
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:83
    // result = op.extract(a, b, c)
    extract3
    // tests/artifacts/MiscellaneousOps/contract.py:81
    // @arc4.abimethod()
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_extract_from_2[routing]() -> void:
verify_extract_from_2:
    // tests/artifacts/MiscellaneousOps/contract.py:86
    // @arc4.abimethod()
    txna ApplicationArgs 1
    // tests/artifacts/MiscellaneousOps/contract.py:88
    // result = op.extract(a, 2, 0)
    extract 4 0
    // tests/artifacts/MiscellaneousOps/contract.py:86
    // @arc4.abimethod()
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_extract_uint16[routing]() -> void:
verify_extract_uint16:
    // tests/artifacts/MiscellaneousOps/contract.py:91
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:93
    // result = op.extract_uint16(a, b)
    extract_uint16
    // tests/artifacts/MiscellaneousOps/contract.py:91
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_extract_uint32[routing]() -> void:
verify_extract_uint32:
    // tests/artifacts/MiscellaneousOps/contract.py:96
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:98
    // result = op.extract_uint32(a, b)
    extract_uint32
    // tests/artifacts/MiscellaneousOps/contract.py:96
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_extract_uint64[routing]() -> void:
verify_extract_uint64:
    // tests/artifacts/MiscellaneousOps/contract.py:101
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    pushint 8 // 8
    extract3
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_getbit_bytes[routing]() -> void:
verify_getbit_bytes:
    // tests/artifacts/MiscellaneousOps/contract.py:106
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:108
    // result = op.getbit(a, b)
    getbit
    // tests/artifacts/MiscellaneousOps/contract.py:106
    // @arc4.abimethod()
    bytec_2 // 0x00
    intc_1 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_getbit_uint64[routing]() -> void:
verify_getbit_uint64:
    // tests/artifacts/MiscellaneousOps/contract.py:111
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:113
    // result = op.getbit(a, b)
    getbit
    // tests/artifacts/MiscellaneousOps/contract.py:111
    // @arc4.abimethod()
    bytec_2 // 0x00
    intc_1 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_getbyte[routing]() -> void:
verify_getbyte:
    // tests/artifacts/MiscellaneousOps/contract.py:116
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:118
    // result = op.getbyte(a, b)
    getbyte
    // tests/artifacts/MiscellaneousOps/contract.py:116
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_itob[routing]() -> void:
verify_itob:
    // tests/artifacts/MiscellaneousOps/contract.py:121
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:123
    // result = op.itob(a)
    itob
    // tests/artifacts/MiscellaneousOps/contract.py:121
    // @arc4.abimethod()
    pushbytes 0x151f7c750008
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_mulw[routing]() -> void:
verify_mulw:
    // tests/artifacts/MiscellaneousOps/contract.py:126
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:128
    // result = op.mulw(a, b)
    mulw
    // tests/artifacts/MiscellaneousOps/contract.py:126
    // @arc4.abimethod()
    swap
    itob
    swap
    itob
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_replace[routing]() -> void:
verify_replace:
    // tests/artifacts/MiscellaneousOps/contract.py:131
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    extract 2 0
    // tests/artifacts/MiscellaneousOps/contract.py:133
    // result = op.replace(a, b, c)
    replace3
    // tests/artifacts/MiscellaneousOps/contract.py:131
    // @arc4.abimethod()
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_select_bytes[routing]() -> void:
verify_select_bytes:
    // tests/artifacts/MiscellaneousOps/contract.py:136
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:138
    // result = op.select_bytes(a, b, c)
    select
    // tests/artifacts/MiscellaneousOps/contract.py:136
    // @arc4.abimethod()
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_select_uint64[routing]() -> void:
verify_select_uint64:
    // tests/artifacts/MiscellaneousOps/contract.py:141
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:143
    // result = op.select_uint64(a, b, c)
    select
    // tests/artifacts/MiscellaneousOps/contract.py:141
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_setbit_bytes[routing]() -> void:
verify_setbit_bytes:
    // tests/artifacts/MiscellaneousOps/contract.py:146
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    intc_1 // 0
    getbit
    // tests/artifacts/MiscellaneousOps/contract.py:148
    // result = op.setbit_bytes(a, b, c)
    setbit
    // tests/artifacts/MiscellaneousOps/contract.py:146
    // @arc4.abimethod()
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_setbit_uint64[routing]() -> void:
verify_setbit_uint64:
    // tests/artifacts/MiscellaneousOps/contract.py:151
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    intc_1 // 0
    getbit
    // tests/artifacts/MiscellaneousOps/contract.py:153
    // result = op.setbit_uint64(a, b, c)
    setbit
    // tests/artifacts/MiscellaneousOps/contract.py:151
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_setbyte[routing]() -> void:
verify_setbyte:
    // tests/artifacts/MiscellaneousOps/contract.py:156
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:158
    // result = op.setbyte(a, b, c)
    setbyte
    // tests/artifacts/MiscellaneousOps/contract.py:156
    // @arc4.abimethod()
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_shl[routing]() -> void:
verify_shl:
    // tests/artifacts/MiscellaneousOps/contract.py:161
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:163
    // result = op.shl(a, b)
    shl
    // tests/artifacts/MiscellaneousOps/contract.py:161
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_shr[routing]() -> void:
verify_shr:
    // tests/artifacts/MiscellaneousOps/contract.py:166
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:168
    // result = op.shr(a, b)
    shr
    // tests/artifacts/MiscellaneousOps/contract.py:166
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_sqrt[routing]() -> void:
verify_sqrt:
    // tests/artifacts/MiscellaneousOps/contract.py:171
    // @arc4.abimethod()
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:173
    // result = op.sqrt(a)
    sqrt
    // tests/artifacts/MiscellaneousOps/contract.py:171
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_substring[routing]() -> void:
verify_substring:
    // tests/artifacts/MiscellaneousOps/contract.py:176
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/MiscellaneousOps/contract.py:178
    // result = op.substring(a, b, c)
    substring3
    // tests/artifacts/MiscellaneousOps/contract.py:176
    // @arc4.abimethod()
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_json_ref_string[routing]() -> void:
verify_json_ref_string:
    // tests/artifacts/MiscellaneousOps/contract.py:181
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/MiscellaneousOps/contract.py:183
    // result = op.JsonRef.json_string(a, b)
    json_ref JSONString
    // tests/artifacts/MiscellaneousOps/contract.py:181
    // @arc4.abimethod()
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_json_ref_uint64[routing]() -> void:
verify_json_ref_uint64:
    // tests/artifacts/MiscellaneousOps/contract.py:186
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/MiscellaneousOps/contract.py:188
    // result = op.JsonRef.json_uint64(a, b)
    json_ref JSONUint64
    // tests/artifacts/MiscellaneousOps/contract.py:186
    // @arc4.abimethod()
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.MiscellaneousOps.contract.MiscellaneousOpsContract.verify_json_ref_object[routing]() -> void:
verify_json_ref_object:
    // tests/artifacts/MiscellaneousOps/contract.py:191
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/MiscellaneousOps/contract.py:193
    // result = op.JsonRef.json_object(a, b)
    json_ref JSONObject
    // tests/artifacts/MiscellaneousOps/contract.py:191
    // @arc4.abimethod()
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return
