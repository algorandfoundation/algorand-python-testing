#pragma version 11
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1
    bytecblock 0x151f7c75
    // tests/artifacts/StateOps/contract.py:24
    // class StateAcctParamsGetContract(ARC4Contract, avm_version=11):
    txn NumAppArgs
    bz main___algopy_default_create@22
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0x5f5b43e4 0x73dc93c7 0x5626dfeb 0xdc8a25bf 0x198ebd8c 0x2301ab26 0x9f68fca6 0xa975c2d1 0xd1e04801 0xb6966be5 0x195d5418 0x6adae3f1 0xdf8cfee5 0x6ad70d21 0x1735fd22 // method "verify_acct_balance(account)uint64", method "verify_acct_min_balance(account)uint64", method "verify_acct_auth_addr(account)address", method "verify_acct_total_num_uint(account)uint64", method "verify_acct_total_num_byte_slice(account)uint64", method "verify_acct_total_extra_app_pages(account)uint64", method "verify_acct_total_apps_created(account)uint64", method "verify_acct_total_apps_opted_in(account)uint64", method "verify_acct_total_assets_created(account)uint64", method "verify_acct_total_assets(account)uint64", method "verify_acct_total_boxes(account)uint64", method "verify_acct_total_box_bytes(account)uint64", method "verify_acct_incentive_eligible(account)bool", method "verify_acct_last_heartbeat(account)uint64", method "verify_acct_last_proposed(account)uint64"
    txna ApplicationArgs 0
    match verify_acct_balance verify_acct_min_balance verify_acct_auth_addr verify_acct_total_num_uint verify_acct_total_num_byte_slice verify_acct_total_extra_app_pages verify_acct_total_apps_created verify_acct_total_apps_opted_in verify_acct_total_assets_created verify_acct_total_assets verify_acct_total_boxes verify_acct_total_box_bytes verify_acct_incentive_eligible verify_acct_last_heartbeat verify_acct_last_proposed
    err

main___algopy_default_create@22:
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_balance[routing]() -> void:
verify_acct_balance:
    // tests/artifacts/StateOps/contract.py:25
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:27
    // value, funded = op.AcctParamsGet.acct_balance(a)
    dup
    acct_params_get AcctBalance
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:28
    // value_index, funded_index = op.AcctParamsGet.acct_balance(_get_1st_ref_index())
    acct_params_get AcctBalance
    // tests/artifacts/StateOps/contract.py:29
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:30
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:31
    // assert value == a.balance, "expected Account balance to match"
    dig 1
    acct_params_get AcctBalance
    assert // account funded
    dig 1
    ==
    assert // expected Account balance to match
    // tests/artifacts/StateOps/contract.py:32
    // assert value == algopy.op.balance(a), "expected op.balance to match"
    swap
    balance
    dig 1
    ==
    assert // expected op.balance to match
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:33-35
    // assert value == algopy.op.balance(
    //     _get_1st_ref_index()
    // ), "expected op.balance by index to match"
    balance
    dig 1
    ==
    assert // expected op.balance by index to match
    // tests/artifacts/StateOps/contract.py:25
    // @arc4.abimethod(resource_encoding="index")
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_min_balance[routing]() -> void:
verify_acct_min_balance:
    // tests/artifacts/StateOps/contract.py:38
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:40
    // value, funded = op.AcctParamsGet.acct_min_balance(a)
    dup
    acct_params_get AcctMinBalance
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:41
    // value_index, funded_index = op.AcctParamsGet.acct_min_balance(_get_1st_ref_index())
    acct_params_get AcctMinBalance
    // tests/artifacts/StateOps/contract.py:42
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:43
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:44
    // assert value == a.min_balance, "expected Account min_balance to match"
    dig 1
    acct_params_get AcctMinBalance
    assert // account funded
    dig 1
    ==
    assert // expected Account min_balance to match
    // tests/artifacts/StateOps/contract.py:45
    // assert value == algopy.op.min_balance(a), "expected op.min_balance to match"
    swap
    min_balance
    dig 1
    ==
    assert // expected op.min_balance to match
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:46-48
    // assert value == algopy.op.min_balance(
    //     _get_1st_ref_index()
    // ), "expected op.min_balance by index to match"
    min_balance
    dig 1
    ==
    assert // expected op.min_balance by index to match
    // tests/artifacts/StateOps/contract.py:38
    // @arc4.abimethod(resource_encoding="index")
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_auth_addr[routing]() -> void:
verify_acct_auth_addr:
    // tests/artifacts/StateOps/contract.py:51
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:53
    // value, funded = op.AcctParamsGet.acct_auth_addr(a)
    acct_params_get AcctAuthAddr
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:54
    // value_index, funded_index = op.AcctParamsGet.acct_auth_addr(_get_1st_ref_index())
    acct_params_get AcctAuthAddr
    // tests/artifacts/StateOps/contract.py:55
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:56
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:51
    // @arc4.abimethod(resource_encoding="index")
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_total_num_uint[routing]() -> void:
verify_acct_total_num_uint:
    // tests/artifacts/StateOps/contract.py:59
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:61
    // value, funded = op.AcctParamsGet.acct_total_num_uint(a)
    acct_params_get AcctTotalNumUint
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:62
    // value_index, funded_index = op.AcctParamsGet.acct_total_num_uint(_get_1st_ref_index())
    acct_params_get AcctTotalNumUint
    // tests/artifacts/StateOps/contract.py:63
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:64
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:59
    // @arc4.abimethod(resource_encoding="index")
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_total_num_byte_slice[routing]() -> void:
verify_acct_total_num_byte_slice:
    // tests/artifacts/StateOps/contract.py:67
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:69
    // value, funded = op.AcctParamsGet.acct_total_num_byte_slice(a)
    acct_params_get AcctTotalNumByteSlice
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:70-72
    // value_index, funded_index = op.AcctParamsGet.acct_total_num_byte_slice(
    //     _get_1st_ref_index()
    // )
    acct_params_get AcctTotalNumByteSlice
    // tests/artifacts/StateOps/contract.py:73
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:74
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:67
    // @arc4.abimethod(resource_encoding="index")
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_total_extra_app_pages[routing]() -> void:
verify_acct_total_extra_app_pages:
    // tests/artifacts/StateOps/contract.py:77
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:79
    // value, funded = op.AcctParamsGet.acct_total_extra_app_pages(a)
    acct_params_get AcctTotalExtraAppPages
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:80-82
    // value_index, funded_index = op.AcctParamsGet.acct_total_extra_app_pages(
    //     _get_1st_ref_index()
    // )
    acct_params_get AcctTotalExtraAppPages
    // tests/artifacts/StateOps/contract.py:83
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:84
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:77
    // @arc4.abimethod(resource_encoding="index")
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_total_apps_created[routing]() -> void:
verify_acct_total_apps_created:
    // tests/artifacts/StateOps/contract.py:87
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:89
    // value, funded = op.AcctParamsGet.acct_total_apps_created(a)
    acct_params_get AcctTotalAppsCreated
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:90
    // value_index, funded_index = op.AcctParamsGet.acct_total_apps_created(_get_1st_ref_index())
    acct_params_get AcctTotalAppsCreated
    // tests/artifacts/StateOps/contract.py:91
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:92
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:87
    // @arc4.abimethod(resource_encoding="index")
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_total_apps_opted_in[routing]() -> void:
verify_acct_total_apps_opted_in:
    // tests/artifacts/StateOps/contract.py:95
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:97
    // value, funded = op.AcctParamsGet.acct_total_apps_opted_in(a)
    acct_params_get AcctTotalAppsOptedIn
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:98
    // value_index, funded_index = op.AcctParamsGet.acct_total_apps_opted_in(_get_1st_ref_index())
    acct_params_get AcctTotalAppsOptedIn
    // tests/artifacts/StateOps/contract.py:99
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:100
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:95
    // @arc4.abimethod(resource_encoding="index")
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_total_assets_created[routing]() -> void:
verify_acct_total_assets_created:
    // tests/artifacts/StateOps/contract.py:103
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:105
    // value, funded = op.AcctParamsGet.acct_total_assets_created(a)
    acct_params_get AcctTotalAssetsCreated
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:106-108
    // value_index, funded_index = op.AcctParamsGet.acct_total_assets_created(
    //     _get_1st_ref_index()
    // )
    acct_params_get AcctTotalAssetsCreated
    // tests/artifacts/StateOps/contract.py:109
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:110
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:103
    // @arc4.abimethod(resource_encoding="index")
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_total_assets[routing]() -> void:
verify_acct_total_assets:
    // tests/artifacts/StateOps/contract.py:113
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:115
    // value, funded = op.AcctParamsGet.acct_total_assets(a)
    acct_params_get AcctTotalAssets
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:116
    // value_index, funded_index = op.AcctParamsGet.acct_total_assets(_get_1st_ref_index())
    acct_params_get AcctTotalAssets
    // tests/artifacts/StateOps/contract.py:117
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:118
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:113
    // @arc4.abimethod(resource_encoding="index")
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_total_boxes[routing]() -> void:
verify_acct_total_boxes:
    // tests/artifacts/StateOps/contract.py:121
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:123
    // value, funded = op.AcctParamsGet.acct_total_boxes(a)
    acct_params_get AcctTotalBoxes
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:124
    // value_index, funded_index = op.AcctParamsGet.acct_total_boxes(_get_1st_ref_index())
    acct_params_get AcctTotalBoxes
    // tests/artifacts/StateOps/contract.py:125
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:126
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:121
    // @arc4.abimethod(resource_encoding="index")
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_total_box_bytes[routing]() -> void:
verify_acct_total_box_bytes:
    // tests/artifacts/StateOps/contract.py:129
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:131
    // value, funded = op.AcctParamsGet.acct_total_box_bytes(a)
    acct_params_get AcctTotalBoxBytes
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:132
    // value_index, funded_index = op.AcctParamsGet.acct_total_box_bytes(_get_1st_ref_index())
    acct_params_get AcctTotalBoxBytes
    // tests/artifacts/StateOps/contract.py:133
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:134
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:129
    // @arc4.abimethod(resource_encoding="index")
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_incentive_eligible[routing]() -> void:
verify_acct_incentive_eligible:
    // tests/artifacts/StateOps/contract.py:137
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:139
    // value, funded = op.AcctParamsGet.acct_incentive_eligible(a)
    acct_params_get AcctIncentiveEligible
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:140
    // value_index, funded_index = op.AcctParamsGet.acct_incentive_eligible(_get_1st_ref_index())
    acct_params_get AcctIncentiveEligible
    // tests/artifacts/StateOps/contract.py:141
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:142
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:137
    // @arc4.abimethod(resource_encoding="index")
    pushbytes 0x00
    pushint 0 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_last_heartbeat[routing]() -> void:
verify_acct_last_heartbeat:
    // tests/artifacts/StateOps/contract.py:145
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:147
    // value, funded = op.AcctParamsGet.acct_last_heartbeat(a)
    acct_params_get AcctLastHeartbeat
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:148
    // value_index, funded_index = op.AcctParamsGet.acct_last_heartbeat(_get_1st_ref_index())
    acct_params_get AcctLastHeartbeat
    // tests/artifacts/StateOps/contract.py:149
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:150
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:145
    // @arc4.abimethod(resource_encoding="index")
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAcctParamsGetContract.verify_acct_last_proposed[routing]() -> void:
verify_acct_last_proposed:
    // tests/artifacts/StateOps/contract.py:153
    // @arc4.abimethod(resource_encoding="index")
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    // tests/artifacts/StateOps/contract.py:155
    // value, funded = op.AcctParamsGet.acct_last_proposed(a)
    acct_params_get AcctLastProposed
    // tests/artifacts/StateOps/contract.py:21
    // return op.btoi(Txn.application_args(1))
    txna ApplicationArgs 1
    btoi
    // tests/artifacts/StateOps/contract.py:156
    // value_index, funded_index = op.AcctParamsGet.acct_last_proposed(_get_1st_ref_index())
    acct_params_get AcctLastProposed
    // tests/artifacts/StateOps/contract.py:157
    // assert value == value_index, "expected value by index to match"
    dig 3
    uncover 2
    ==
    assert // expected value by index to match
    // tests/artifacts/StateOps/contract.py:158
    // assert funded == funded_index, "expected funded by index to match"
    ==
    assert // expected funded by index to match
    // tests/artifacts/StateOps/contract.py:153
    // @arc4.abimethod(resource_encoding="index")
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return
