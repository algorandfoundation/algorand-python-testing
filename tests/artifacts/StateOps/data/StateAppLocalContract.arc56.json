{
    "name": "StateAppLocalContract",
    "structs": {},
    "methods": [
        {
            "name": "opt_in",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_get_bytes",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_get_uint64",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_get_ex_bytes",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                },
                {
                    "type": "application",
                    "name": "b"
                },
                {
                    "type": "byte[]",
                    "name": "c"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_get_ex_uint64",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                },
                {
                    "type": "application",
                    "name": "b"
                },
                {
                    "type": "byte[]",
                    "name": "c"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_delete",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_exists",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_put_uint64",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "c"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_put_bytes",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                },
                {
                    "type": "byte[]",
                    "name": "c"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 1,
                "bytes": 1
            }
        },
        "keys": {
            "global": {},
            "local": {
                "local_uint64": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bG9jYWxfdWludDY0"
                },
                "local_bytes": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "bG9jYWxfYnl0ZXM="
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        92,
                        122,
                        150,
                        185,
                        209,
                        244,
                        286,
                        315
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        352
                    ],
                    "errorMessage": "OnCompletion is not OptIn"
                },
                {
                    "pc": [
                        369
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        95,
                        125,
                        153,
                        188,
                        212,
                        247,
                        289,
                        318,
                        355
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAQAmAQQVH3x1MRtBAViCCQQwxtWKBJN7XhMEjXQrhgR6bQtZBFlP8dkElaMXJwSqH0eSBEYkUocEfw/f3TYaAI4JAQUA4QDEAJoAdwBfADwAIAACI0MxGRREMRhENhoBF8AcNhoCVwIANhoDVwIAiAF7IkMxGRREMRhENhoBF8AcNhoCVwIANhoDF4gBVCJDMRkURDEYRDYaARfAHDYaAlcCAIgBMIABACNPAlQoTFCwIkMxGRREMRhENhoBF8AcNhoCVwIAiAEEIkMxGRREMRhENhoBF8AcNhoCF8AyNhoDVwIAiADaFihMULAiQzEZFEQxGEQ2GgEXwBw2GgIXwDI2GgNXAgCIAKtJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgEXwBw2GgJXAgCIAH4WKExQsCJDMRkURDEYRDYaARfAHDYaAlcCAIgAWEkVFlcGAkxQKExQsCJDMRkiEkQxGESIAA0iQzEZQP7pMRgURCJDMgmCAgtsb2NhbF9ieXRlcwtkdW1teV9ieXRlc2YyCYAMbG9jYWxfdWludDY0gecHZomKAgGL/ov/YomKAgGL/ov/YomKAwGL/Yv+i/9jSImKAwGL/Yv+i/9jSImKAgCL/ov/aImKAgGL/iOL/2NFAYmKAwCL/Yv+i/9miYoDAIv9i/6L/2aJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 8,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {}
}