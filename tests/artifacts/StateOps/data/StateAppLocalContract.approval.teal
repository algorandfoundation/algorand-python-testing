#pragma version 10
#pragma typetrack false

// tests.artifacts.StateOps.contract.StateAppLocalContract.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 1 0
    bytecblock 0x151f7c75
    // tests/artifacts/StateOps/contract.py:373
    // class StateAppLocalContract(ARC4Contract):
    txn NumAppArgs
    bz main_bare_routing@14
    pushbytess 0x30c6d58a 0x937b5e13 0x8d742b86 0x7a6d0b59 0x594ff1d9 0x95a31727 0xaa1f4792 0x46245287 0x7f0fdfdd // method "opt_in()void", method "verify_get_bytes(account,byte[])byte[]", method "verify_get_uint64(account,byte[])uint64", method "verify_get_ex_bytes(account,application,byte[])byte[]", method "verify_get_ex_uint64(account,application,byte[])uint64", method "verify_delete(account,byte[])void", method "verify_exists(account,byte[])bool", method "verify_put_uint64(account,byte[],uint64)void", method "verify_put_bytes(account,byte[],byte[])void"
    txna ApplicationArgs 0
    match main_opt_in_route@5 main_verify_get_bytes_route@6 main_verify_get_uint64_route@7 main_verify_get_ex_bytes_route@8 main_verify_get_ex_uint64_route@9 main_verify_delete_route@10 main_verify_exists_route@11 main_verify_put_uint64_route@12 main_verify_put_bytes_route@13

main_after_if_else@16:
    // tests/artifacts/StateOps/contract.py:373
    // class StateAppLocalContract(ARC4Contract):
    intc_1 // 0
    return

main_verify_put_bytes_route@13:
    // tests/artifacts/StateOps/contract.py:423
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/StateOps/contract.py:373
    // class StateAppLocalContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    extract 2 0
    txna ApplicationArgs 3
    extract 2 0
    // tests/artifacts/StateOps/contract.py:423
    // @arc4.abimethod()
    callsub verify_put_bytes
    intc_0 // 1
    return

main_verify_put_uint64_route@12:
    // tests/artifacts/StateOps/contract.py:419
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/StateOps/contract.py:373
    // class StateAppLocalContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    extract 2 0
    txna ApplicationArgs 3
    btoi
    // tests/artifacts/StateOps/contract.py:419
    // @arc4.abimethod()
    callsub verify_put_uint64
    intc_0 // 1
    return

main_verify_exists_route@11:
    // tests/artifacts/StateOps/contract.py:414
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/StateOps/contract.py:373
    // class StateAppLocalContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/StateOps/contract.py:414
    // @arc4.abimethod()
    callsub verify_exists
    pushbytes 0x00
    intc_1 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_verify_delete_route@10:
    // tests/artifacts/StateOps/contract.py:410
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/StateOps/contract.py:373
    // class StateAppLocalContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/StateOps/contract.py:410
    // @arc4.abimethod()
    callsub verify_delete
    intc_0 // 1
    return

main_verify_get_ex_uint64_route@9:
    // tests/artifacts/StateOps/contract.py:405
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/StateOps/contract.py:373
    // class StateAppLocalContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    btoi
    txnas Applications
    txna ApplicationArgs 3
    extract 2 0
    // tests/artifacts/StateOps/contract.py:405
    // @arc4.abimethod()
    callsub verify_get_ex_uint64
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_verify_get_ex_bytes_route@8:
    // tests/artifacts/StateOps/contract.py:400
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/StateOps/contract.py:373
    // class StateAppLocalContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    btoi
    txnas Applications
    txna ApplicationArgs 3
    extract 2 0
    // tests/artifacts/StateOps/contract.py:400
    // @arc4.abimethod()
    callsub verify_get_ex_bytes
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_verify_get_uint64_route@7:
    // tests/artifacts/StateOps/contract.py:395
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/StateOps/contract.py:373
    // class StateAppLocalContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/StateOps/contract.py:395
    // @arc4.abimethod()
    callsub verify_get_uint64
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_verify_get_bytes_route@6:
    // tests/artifacts/StateOps/contract.py:390
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // tests/artifacts/StateOps/contract.py:373
    // class StateAppLocalContract(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/StateOps/contract.py:390
    // @arc4.abimethod()
    callsub verify_get_bytes
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_opt_in_route@5:
    // tests/artifacts/StateOps/contract.py:385
    // @arc4.abimethod(allow_actions=["OptIn"])
    txn OnCompletion
    intc_0 // OptIn
    ==
    assert // OnCompletion is not OptIn
    txn ApplicationID
    assert // can only call when not creating
    callsub opt_in
    intc_0 // 1
    return

main_bare_routing@14:
    // tests/artifacts/StateOps/contract.py:373
    // class StateAppLocalContract(ARC4Contract):
    txn OnCompletion
    bnz main_after_if_else@16
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    return


// tests.artifacts.StateOps.contract.StateAppLocalContract.opt_in() -> void:
opt_in:
    // tests/artifacts/StateOps/contract.py:387
    // self.local_bytes[Global.creator_address] = Bytes(b"dummy_bytes")
    global CreatorAddress
    pushbytess "local_bytes" 0x64756d6d795f6279746573 // "local_bytes", 0x64756d6d795f6279746573
    app_local_put
    // tests/artifacts/StateOps/contract.py:388
    // self.local_uint64[Global.creator_address] = UInt64(999)
    global CreatorAddress
    pushbytes "local_uint64"
    pushint 999 // 999
    app_local_put
    retsub


// tests.artifacts.StateOps.contract.StateAppLocalContract.verify_get_bytes(a: bytes, b: bytes) -> bytes:
verify_get_bytes:
    // tests/artifacts/StateOps/contract.py:390-391
    // @arc4.abimethod()
    // def verify_get_bytes(self, a: Account, b: Bytes) -> Bytes:
    proto 2 1
    // tests/artifacts/StateOps/contract.py:392
    // value = op.AppLocal.get_bytes(a, b)
    frame_dig -2
    frame_dig -1
    app_local_get
    // tests/artifacts/StateOps/contract.py:393
    // return value
    retsub


// tests.artifacts.StateOps.contract.StateAppLocalContract.verify_get_uint64(a: bytes, b: bytes) -> uint64:
verify_get_uint64:
    // tests/artifacts/StateOps/contract.py:395-396
    // @arc4.abimethod()
    // def verify_get_uint64(self, a: Account, b: Bytes) -> UInt64:
    proto 2 1
    // tests/artifacts/StateOps/contract.py:397
    // value = op.AppLocal.get_uint64(a, b)
    frame_dig -2
    frame_dig -1
    app_local_get
    // tests/artifacts/StateOps/contract.py:398
    // return value
    retsub


// tests.artifacts.StateOps.contract.StateAppLocalContract.verify_get_ex_bytes(a: bytes, b: uint64, c: bytes) -> bytes:
verify_get_ex_bytes:
    // tests/artifacts/StateOps/contract.py:400-401
    // @arc4.abimethod()
    // def verify_get_ex_bytes(self, a: Account, b: Application, c: Bytes) -> Bytes:
    proto 3 1
    // tests/artifacts/StateOps/contract.py:402
    // value, _val = op.AppLocal.get_ex_bytes(a, b, c)
    frame_dig -3
    frame_dig -2
    frame_dig -1
    app_local_get_ex
    pop
    // tests/artifacts/StateOps/contract.py:403
    // return value
    retsub


// tests.artifacts.StateOps.contract.StateAppLocalContract.verify_get_ex_uint64(a: bytes, b: uint64, c: bytes) -> uint64:
verify_get_ex_uint64:
    // tests/artifacts/StateOps/contract.py:405-406
    // @arc4.abimethod()
    // def verify_get_ex_uint64(self, a: Account, b: Application, c: Bytes) -> UInt64:
    proto 3 1
    // tests/artifacts/StateOps/contract.py:407
    // value, _val = op.AppLocal.get_ex_uint64(a, b, c)
    frame_dig -3
    frame_dig -2
    frame_dig -1
    app_local_get_ex
    pop
    // tests/artifacts/StateOps/contract.py:408
    // return value
    retsub


// tests.artifacts.StateOps.contract.StateAppLocalContract.verify_delete(a: bytes, b: bytes) -> void:
verify_delete:
    // tests/artifacts/StateOps/contract.py:410-411
    // @arc4.abimethod()
    // def verify_delete(self, a: Account, b: Bytes) -> None:
    proto 2 0
    // tests/artifacts/StateOps/contract.py:412
    // op.AppLocal.delete(a, b)
    frame_dig -2
    frame_dig -1
    app_local_del
    retsub


// tests.artifacts.StateOps.contract.StateAppLocalContract.verify_exists(a: bytes, b: bytes) -> uint64:
verify_exists:
    // tests/artifacts/StateOps/contract.py:414-415
    // @arc4.abimethod()
    // def verify_exists(self, a: Account, b: Bytes) -> bool:
    proto 2 1
    // tests/artifacts/StateOps/contract.py:416
    // _value, exists = op.AppLocal.get_ex_uint64(a, 0, b)
    frame_dig -2
    intc_1 // 0
    frame_dig -1
    app_local_get_ex
    bury 1
    // tests/artifacts/StateOps/contract.py:417
    // return exists
    retsub


// tests.artifacts.StateOps.contract.StateAppLocalContract.verify_put_uint64(a: bytes, b: bytes, c: uint64) -> void:
verify_put_uint64:
    // tests/artifacts/StateOps/contract.py:419-420
    // @arc4.abimethod()
    // def verify_put_uint64(self, a: Account, b: Bytes, c: UInt64) -> None:
    proto 3 0
    // tests/artifacts/StateOps/contract.py:421
    // op.AppLocal.put(a, b, c)
    frame_dig -3
    frame_dig -2
    frame_dig -1
    app_local_put
    retsub


// tests.artifacts.StateOps.contract.StateAppLocalContract.verify_put_bytes(a: bytes, b: bytes, c: bytes) -> void:
verify_put_bytes:
    // tests/artifacts/StateOps/contract.py:423-424
    // @arc4.abimethod()
    // def verify_put_bytes(self, a: Account, b: Bytes, c: Bytes) -> None:
    proto 3 0
    // tests/artifacts/StateOps/contract.py:425
    // op.AppLocal.put(a, b, c)
    frame_dig -3
    frame_dig -2
    frame_dig -1
    app_local_put
    retsub
