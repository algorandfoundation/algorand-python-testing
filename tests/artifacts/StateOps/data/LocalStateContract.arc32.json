{
    "hints": {
        "opt_in()void": {
            "call_config": {
                "opt_in": "CALL"
            }
        },
        "get_implicit_key_arc4_uint(account)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_string(account)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_byte(account)byte": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_bool(account)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_address(account)address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_uint128(account)uint128": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_dynamic_bytes(account)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_tuple(account)(uint64,byte[],bool)": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_uint(account)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_string(account)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_byte(account)byte": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_bool(account)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_address(account)address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_uint128(account)uint128": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_dynamic_bytes(account)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 15,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {
                "arc4_address": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_address"
                },
                "arc4_bool": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_bool"
                },
                "arc4_byte": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_byte"
                },
                "arc4_dynamic_bytes": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_dynamic_bytes"
                },
                "arc4_string": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_string"
                },
                "arc4_uint": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_uint"
                },
                "arc4_uint128": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_uint128"
                },
                "implicit_key_arc4_address": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_address"
                },
                "implicit_key_arc4_bool": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_bool"
                },
                "implicit_key_arc4_byte": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_byte"
                },
                "implicit_key_arc4_dynamic_bytes": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_dynamic_bytes"
                },
                "implicit_key_arc4_string": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_string"
                },
                "implicit_key_arc4_uint": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_uint"
                },
                "implicit_key_arc4_uint128": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_uint128"
                },
                "implicit_key_tuple": {
                    "type": "bytes",
                    "key": "implicit_key_tuple"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "LocalStateContract",
        "methods": [
            {
                "name": "opt_in",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_implicit_key_arc4_uint",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "get_implicit_key_arc4_string",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "get_implicit_key_arc4_byte",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte"
                }
            },
            {
                "name": "get_implicit_key_arc4_bool",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "get_implicit_key_arc4_address",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "get_implicit_key_arc4_uint128",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint128"
                }
            },
            {
                "name": "get_implicit_key_arc4_dynamic_bytes",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "get_implicit_key_tuple",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(uint64,byte[],bool)"
                }
            },
            {
                "name": "get_arc4_uint",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "get_arc4_string",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "get_arc4_byte",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte"
                }
            },
            {
                "name": "get_arc4_bool",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "get_arc4_address",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "get_arc4_uint128",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint128"
                }
            },
            {
                "name": "get_arc4_dynamic_bytes",
                "args": [
                    {
                        "type": "account",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}