{
    "hints": {
        "get_implicit_key_arc4_uint()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_string()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_byte()byte": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_bool()bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_address()address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_uint128()uint128": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_implicit_key_arc4_dynamic_bytes()byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_uint()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_string()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_byte()byte": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_bool()bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_address()address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_uint128()uint128": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_arc4_dynamic_bytes()byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_uint(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_string(string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_byte(byte)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_bool(bool)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_address(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_uint128(uint128)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_implicit_key_arc4_dynamic_bytes(byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_uint(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_string(string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_byte(byte)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_bool(bool)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_address(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_uint128(uint128)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_arc4_dynamic_bytes(byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 14,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "arc4_address": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_address"
                },
                "arc4_bool": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_bool"
                },
                "arc4_byte": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_byte"
                },
                "arc4_dynamic_bytes": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_dynamic_bytes"
                },
                "arc4_string": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_string"
                },
                "arc4_uint": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_uint"
                },
                "arc4_uint128": {
                    "type": "bytes",
                    "key": "explicit_key_arc4_uint128"
                },
                "implicit_key_arc4_address": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_address"
                },
                "implicit_key_arc4_bool": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_bool"
                },
                "implicit_key_arc4_byte": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_byte"
                },
                "implicit_key_arc4_dynamic_bytes": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_dynamic_bytes"
                },
                "implicit_key_arc4_string": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_string"
                },
                "implicit_key_arc4_uint": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_uint"
                },
                "implicit_key_arc4_uint128": {
                    "type": "bytes",
                    "key": "implicit_key_arc4_uint128"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "GlobalStateContract",
        "methods": [
            {
                "name": "get_implicit_key_arc4_uint",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "get_implicit_key_arc4_string",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "get_implicit_key_arc4_byte",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "byte"
                }
            },
            {
                "name": "get_implicit_key_arc4_bool",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "get_implicit_key_arc4_address",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "get_implicit_key_arc4_uint128",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint128"
                }
            },
            {
                "name": "get_implicit_key_arc4_dynamic_bytes",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "get_arc4_uint",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "get_arc4_string",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "get_arc4_byte",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "byte"
                }
            },
            {
                "name": "get_arc4_bool",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "get_arc4_address",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "get_arc4_uint128",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint128"
                }
            },
            {
                "name": "get_arc4_dynamic_bytes",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "set_implicit_key_arc4_uint",
                "args": [
                    {
                        "type": "uint64",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_implicit_key_arc4_string",
                "args": [
                    {
                        "type": "string",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_implicit_key_arc4_byte",
                "args": [
                    {
                        "type": "byte",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_implicit_key_arc4_bool",
                "args": [
                    {
                        "type": "bool",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_implicit_key_arc4_address",
                "args": [
                    {
                        "type": "address",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_implicit_key_arc4_uint128",
                "args": [
                    {
                        "type": "uint128",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_implicit_key_arc4_dynamic_bytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_uint",
                "args": [
                    {
                        "type": "uint64",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_string",
                "args": [
                    {
                        "type": "string",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_byte",
                "args": [
                    {
                        "type": "byte",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_bool",
                "args": [
                    {
                        "type": "bool",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_address",
                "args": [
                    {
                        "type": "address",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_uint128",
                "args": [
                    {
                        "type": "uint128",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_arc4_dynamic_bytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}