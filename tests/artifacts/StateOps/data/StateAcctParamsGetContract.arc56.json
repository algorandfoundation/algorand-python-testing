{
    "name": "StateAcctParamsGetContract",
    "structs": {},
    "methods": [
        {
            "name": "verify_acct_balance",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_min_balance",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_auth_addr",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_num_uint",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_num_byte_slice",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_extra_app_pages",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_apps_created",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_apps_opted_in",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_assets_created",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_assets",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_boxes",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_total_box_bytes",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_incentive_eligible",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_last_heartbeat",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verify_acct_last_proposed",
            "args": [
                {
                    "type": "account",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        19
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        143
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        173,
                        227
                    ],
                    "errorMessage": "account funded"
                },
                {
                    "pc": [
                        177
                    ],
                    "errorMessage": "expected Account balance to match"
                },
                {
                    "pc": [
                        231
                    ],
                    "errorMessage": "expected Account min_balance to match"
                },
                {
                    "pc": [
                        168,
                        222,
                        275,
                        303,
                        332,
                        361,
                        390,
                        419,
                        448,
                        477,
                        506,
                        535,
                        564,
                        600,
                        629
                    ],
                    "errorMessage": "expected funded by index to match"
                },
                {
                    "pc": [
                        192
                    ],
                    "errorMessage": "expected op.balance by index to match"
                },
                {
                    "pc": [
                        183
                    ],
                    "errorMessage": "expected op.balance to match"
                },
                {
                    "pc": [
                        246
                    ],
                    "errorMessage": "expected op.min_balance by index to match"
                },
                {
                    "pc": [
                        237
                    ],
                    "errorMessage": "expected op.min_balance to match"
                },
                {
                    "pc": [
                        166,
                        220,
                        273,
                        301,
                        330,
                        359,
                        388,
                        417,
                        446,
                        475,
                        504,
                        533,
                        562,
                        598,
                        627
                    ],
                    "errorMessage": "expected value by index to match"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyABASYBBBUffHUxG0EAeDEZFEQxGESCDwRfW0PkBHPck8cEVibf6wTciiW/BBmOvYwEIwGrJgSfaPymBKl1wtEE0eBIAQS2lmvlBBldVBgEatrj8QTfjP7lBGrXDSEEFzX9IjYaAI4PAAsAQQB3AJMAsADNAOoBBwEkAUEBXgF7AZgBvAHZADEZFDEYFBBEIkM2GgEXwBxJcwA2GgEXcwBLA08CEkQSREsBcwBESwESRExgSwESRDYaARdgSwESRBYoTFCwIkM2GgEXwBxJcwE2GgEXcwFLA08CEkQSREsBcwFESwESREx4SwESRDYaARd4SwESRBYoTFCwIkM2GgEXwBxzAjYaARdzAksDTwISRBJEKExQsCJDNhoBF8AccwM2GgEXcwNLA08CEkQSRBYoTFCwIkM2GgEXwBxzBDYaARdzBEsDTwISRBJEFihMULAiQzYaARfAHHMFNhoBF3MFSwNPAhJEEkQWKExQsCJDNhoBF8AccwY2GgEXcwZLA08CEkQSRBYoTFCwIkM2GgEXwBxzBzYaARdzB0sDTwISRBJEFihMULAiQzYaARfAHHMINhoBF3MISwNPAhJEEkQWKExQsCJDNhoBF8Accwk2GgEXcwlLA08CEkQSRBYoTFCwIkM2GgEXwBxzCjYaARdzCksDTwISRBJEFihMULAiQzYaARfAHHMLNhoBF3MLSwNPAhJEEkQWKExQsCJDNhoBF8Accww2GgEXcwxLA08CEkQSRIABAIEATwJUKExQsCJDNhoBF8Accw42GgEXcw5LA08CEkQSRBYoTFCwIkM2GgEXwBxzDTYaARdzDUsDTwISRBJEFihMULAiQw==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 3,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {}
}