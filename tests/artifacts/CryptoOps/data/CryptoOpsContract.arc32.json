{
    "hints": {
        "verify_sha256(byte[],uint64)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_sha3_256(byte[],uint64)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_keccak_256(byte[],uint64)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_sha512_256(byte[],uint64)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ed25519verify(byte[],byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ed25519verify_bare(byte[],byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ecdsa_verify_k1(byte[],byte[],byte[],byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ecdsa_verify_r1(byte[],byte[],byte[],byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ecdsa_recover_k1(byte[],uint64,byte[],byte[])(byte[],byte[])": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ecdsa_recover_r1(byte[],uint64,byte[],byte[])(byte[],byte[])": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ecdsa_decompress_k1(byte[])(byte[],byte[])": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ecdsa_decompress_r1(byte[])(byte[],byte[])": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_vrf_verify(byte[],byte[],byte[])(byte[],bool)": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "CryptoOpsContract",
        "methods": [
            {
                "name": "verify_sha256",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "pad_size"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_sha3_256",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "pad_size"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_keccak_256",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "pad_size"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_sha512_256",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "pad_size"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_ed25519verify",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    },
                    {
                        "type": "byte[]",
                        "name": "c"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_ed25519verify_bare",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    },
                    {
                        "type": "byte[]",
                        "name": "c"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_ecdsa_verify_k1",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    },
                    {
                        "type": "byte[]",
                        "name": "c"
                    },
                    {
                        "type": "byte[]",
                        "name": "d"
                    },
                    {
                        "type": "byte[]",
                        "name": "e"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_ecdsa_verify_r1",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    },
                    {
                        "type": "byte[]",
                        "name": "c"
                    },
                    {
                        "type": "byte[]",
                        "name": "d"
                    },
                    {
                        "type": "byte[]",
                        "name": "e"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_ecdsa_recover_k1",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    },
                    {
                        "type": "byte[]",
                        "name": "c"
                    },
                    {
                        "type": "byte[]",
                        "name": "d"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(byte[],byte[])"
                }
            },
            {
                "name": "verify_ecdsa_recover_r1",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    },
                    {
                        "type": "byte[]",
                        "name": "c"
                    },
                    {
                        "type": "byte[]",
                        "name": "d"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(byte[],byte[])"
                },
                "desc": "Must fail, AVM does not support Secp256r1 for recover"
            },
            {
                "name": "verify_ecdsa_decompress_k1",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(byte[],byte[])"
                }
            },
            {
                "name": "verify_ecdsa_decompress_r1",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(byte[],byte[])"
                }
            },
            {
                "name": "verify_vrf_verify",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    },
                    {
                        "type": "byte[]",
                        "name": "c"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(byte[],bool)"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}