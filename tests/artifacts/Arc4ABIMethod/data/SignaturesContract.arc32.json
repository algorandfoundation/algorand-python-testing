{
    "hints": {
        "create()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "sink(string,uint8[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "alias(string,uint8[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "with_txn(string,pay,uint8[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "with_asset(string,asset,uint8[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "with_app(string,application,uint8[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "with_acc(string,account,uint8[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "complex_sig(((uint64,string),(uint64,string),uint128,uint128),txn,account,uint8[])((uint64,string),((uint64,string),(uint64,string),uint128,uint128))": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "struct1": {
                    "name": "MyStruct",
                    "elements": [
                        [
                            "another_struct",
                            "(uint64,string)"
                        ],
                        [
                            "another_struct_alias",
                            "(uint64,string)"
                        ],
                        [
                            "three",
                            "uint128"
                        ],
                        [
                            "four",
                            "uint128"
                        ]
                    ]
                }
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0cy5hcnRpZmFjdHMuQXJjNEFCSU1ldGhvZC5jb250cmFjdC5TaWduYXR1cmVzQ29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIC8vIHRlc3RzL2FydGlmYWN0cy9BcmM0QUJJTWV0aG9kL2NvbnRyYWN0LnB5OjI1CiAgICAvLyBjbGFzcyBTaWduYXR1cmVzQ29udHJhY3QoQVJDNENvbnRyYWN0KToKICAgIGludCAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "SignaturesContract",
        "methods": [
            {
                "name": "create",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "sink",
                "args": [
                    {
                        "type": "string",
                        "name": "value"
                    },
                    {
                        "type": "uint8[]",
                        "name": "arr"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "alias",
                "args": [
                    {
                        "type": "string",
                        "name": "value"
                    },
                    {
                        "type": "uint8[]",
                        "name": "arr"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "with_txn",
                "args": [
                    {
                        "type": "string",
                        "name": "value"
                    },
                    {
                        "type": "pay",
                        "name": "pay"
                    },
                    {
                        "type": "uint8[]",
                        "name": "arr"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "with_asset",
                "args": [
                    {
                        "type": "string",
                        "name": "value"
                    },
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "uint8[]",
                        "name": "arr"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "with_app",
                "args": [
                    {
                        "type": "string",
                        "name": "value"
                    },
                    {
                        "type": "application",
                        "name": "app"
                    },
                    {
                        "type": "uint8[]",
                        "name": "arr"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "with_acc",
                "args": [
                    {
                        "type": "string",
                        "name": "value"
                    },
                    {
                        "type": "account",
                        "name": "acc"
                    },
                    {
                        "type": "uint8[]",
                        "name": "arr"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "complex_sig",
                "args": [
                    {
                        "type": "((uint64,string),(uint64,string),uint128,uint128)",
                        "name": "struct1"
                    },
                    {
                        "type": "txn",
                        "name": "txn"
                    },
                    {
                        "type": "account",
                        "name": "acc"
                    },
                    {
                        "type": "uint8[]",
                        "name": "five"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "((uint64,string),((uint64,string),(uint64,string),uint128,uint128))"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}