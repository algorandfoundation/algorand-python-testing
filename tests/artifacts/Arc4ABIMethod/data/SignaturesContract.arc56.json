{
    "name": "SignaturesContract",
    "structs": {
        "AnotherStruct": [
            {
                "name": "one",
                "type": "uint64"
            },
            {
                "name": "two",
                "type": "string"
            }
        ],
        "MyStruct": [
            {
                "name": "another_struct",
                "type": "AnotherStruct"
            },
            {
                "name": "another_struct_alias",
                "type": "AnotherStruct"
            },
            {
                "name": "three",
                "type": "uint128"
            },
            {
                "name": "four",
                "type": "uint128"
            }
        ]
    },
    "methods": [
        {
            "name": "create",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "sink",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                },
                {
                    "type": "uint8[]",
                    "name": "arr"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "alias",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                },
                {
                    "type": "uint8[]",
                    "name": "arr"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "with_txn",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                },
                {
                    "type": "pay",
                    "name": "pay"
                },
                {
                    "type": "uint8[]",
                    "name": "arr"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "with_asset",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                },
                {
                    "type": "asset",
                    "name": "asset"
                },
                {
                    "type": "uint8[]",
                    "name": "arr"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "with_app",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                },
                {
                    "type": "application",
                    "name": "app"
                },
                {
                    "type": "uint64",
                    "name": "app_id"
                },
                {
                    "type": "uint8[]",
                    "name": "arr"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "with_acc",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                },
                {
                    "type": "account",
                    "name": "acc"
                },
                {
                    "type": "uint8[]",
                    "name": "arr"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "complex_sig",
            "args": [
                {
                    "type": "((uint64,string),(uint64,string),uint128,uint128)",
                    "struct": "MyStruct",
                    "name": "struct1"
                },
                {
                    "type": "txn",
                    "name": "txn"
                },
                {
                    "type": "account",
                    "name": "acc"
                },
                {
                    "type": "uint8[]",
                    "name": "five"
                }
            ],
            "returns": {
                "type": "((uint64,string),((uint64,string),(uint64,string),uint128,uint128))"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_resource_by_index",
            "args": [
                {
                    "type": "asset",
                    "name": "asset"
                },
                {
                    "type": "application",
                    "name": "app"
                },
                {
                    "type": "account",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_resource_by_value",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "uint64",
                    "name": "app"
                },
                {
                    "type": "address",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        117,
                        153,
                        196,
                        248,
                        272,
                        299,
                        323,
                        351,
                        369,
                        387
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        596,
                        601,
                        769,
                        774
                    ],
                    "errorMessage": "account funded"
                },
                {
                    "pc": [
                        537
                    ],
                    "errorMessage": "application exists"
                },
                {
                    "pc": [
                        500
                    ],
                    "errorMessage": "asset exists"
                },
                {
                    "pc": [
                        391
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        120,
                        156,
                        199,
                        251,
                        275,
                        302,
                        326,
                        354,
                        372
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        826
                    ],
                    "errorMessage": "expected account to be passed by index"
                },
                {
                    "pc": [
                        859
                    ],
                    "errorMessage": "expected account to be passed by value"
                },
                {
                    "pc": [
                        532
                    ],
                    "errorMessage": "expected app id to match provided app id"
                },
                {
                    "pc": [
                        816
                    ],
                    "errorMessage": "expected application to be passed by index"
                },
                {
                    "pc": [
                        852
                    ],
                    "errorMessage": "expected application to be passed by value"
                },
                {
                    "pc": [
                        806
                    ],
                    "errorMessage": "expected asset to be passed by index"
                },
                {
                    "pc": [
                        844
                    ],
                    "errorMessage": "expected asset to be passed by value"
                },
                {
                    "pc": [
                        411
                    ],
                    "errorMessage": "expected global to have app address"
                },
                {
                    "pc": [
                        405
                    ],
                    "errorMessage": "expected global to have app id"
                },
                {
                    "pc": [
                        541
                    ],
                    "errorMessage": "expected other app to have same creator"
                },
                {
                    "pc": [
                        416,
                        420
                    ],
                    "errorMessage": "expected txn to have 0"
                },
                {
                    "pc": [
                        402,
                        547
                    ],
                    "errorMessage": "transaction type is appl"
                },
                {
                    "pc": [
                        339
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAEAQAEBiYEAgAABBUffHUIAAAAAAAAAAEDAAEyMRtBAE2CCgRMXGG6BOGJItgEOwXPFwQGWNzDBFtkR94EBh9OdwTqqJE5BFEOcqQE1sKsfwRIFC1eNhoAjgoBEAD+AOwA0AC4AJ0AhQBRACYAAiNDMRkURDEYRDYaARc2GgIXNhoDiAK7TwIWTwIWUExQKUxQsCJDMRkURDEYRDYaARfAMDYaAhfAMjYaAxfAHIgCaE8CFk8CFlBMUClMULAiQzEZFEQxGEQ2GgExFiIJNhoCF8AcNhoDiAGUSwEVJAgWVwYCgAIABExQTwJQTFApTFCwIkMxGRREMRhENhoBNhoCF8AcNhoDiAE4IkMxGRREMRhENhoBNhoCF8AyNhoDNhoEiADbIkMxGRREMRhENhoBNhoCF8AwNhoDiAClIkMxGRREMRhENhoBMRYiCUk4ECISRDYaAogAaCJDMRkURDEYRDYaATYaAogASCJDMRkURDEYRDYaATYaAogAKCJDMRkURDEYFESIAAIiQyM4ECUSRDIIRDIKMgMTRCM4GBREMRgURImKAgCL/igTRIv/KBNEiYoCAIv+KBNEi/8oE0SJigMAi/0oE0SL/ygTRIv+OBYURDEWIhJEi/44CIF7EkSJigMAi/0oE0SL/ygTRIv+cQBEgXsSRDYwAIv+EkSJigQAi/woE0SL/ygTRIv9Fov+qESL/XIHRDIJEkQjOBAlEkQjScIyMggSRDYyADIIEkQjIsIyi/0SRDYyAYv9EkSJigMAi/0oE0SL/ygTRIv+cwBEi/5zAUSB0gkIEkQ2HAAxABJENhwBi/4SRImKBAIxGyQSRIv8I1mL/IECWYv8TwJLAlJJVwAIKqhESYEIWUsBFUsCTgJSKxJEi/wVi/xPA08CUklXAAgqqERJgQhZSwEVUisSRIv8VwQQgBAAAAAAAAAAAAAAAAAAAAADqESL/FcUEIAQAAAAAAAAAAAAAAAAAAAABKhEi/04FjEWIgkSRDYaAoABARJEi/5zAESL/nMBRIHSCQgSRIv/VwIBgAEFqESL/ImKAwM2GgEXwDCL/RJENhoCF8Ayi/4SRDYaAxfAHIv/EkSL/Yv+i/+JigMDNhoBF4v9EkQ2GgIXi/4SRIv/NhoDEkSL/Yv+i/+J",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}