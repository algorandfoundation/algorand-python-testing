{
    "name": "StateMutations",
    "structs": {},
    "methods": [
        {
            "name": "append",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "modify",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get",
            "args": [],
            "returns": {
                "type": "(uint64,string)[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 3
            },
            "local": {
                "ints": 0,
                "bytes": 1
            }
        },
        "keys": {
            "global": {
                "no_proxy": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,string)[]",
                    "key": "bm9fcHJveHk="
                },
                "glob_assign": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,string)[]",
                    "key": "Z2xvYl9hc3NpZ24="
                },
                "glob": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,string)[]",
                    "key": "Z2xvYg=="
                }
            },
            "local": {
                "loc": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,string)[]",
                    "key": "bG9j"
                }
            },
            "box": {
                "box": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,string)[]",
                    "key": "Ym94"
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "map": {
                    "keyType": "address",
                    "valueType": "(uint64,string)[]",
                    "prefix": "bWFw"
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": [
            "OptIn"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        95
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        174
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        139
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        526,
                        795,
                        931
                    ],
                    "errorMessage": "check self.box exists"
                },
                {
                    "pc": [
                        481,
                        684,
                        921
                    ],
                    "errorMessage": "check self.glob exists"
                },
                {
                    "pc": [
                        440,
                        577,
                        916
                    ],
                    "errorMessage": "check self.glob_assign exists"
                },
                {
                    "pc": [
                        506,
                        742,
                        928
                    ],
                    "errorMessage": "check self.loc exists for account"
                },
                {
                    "pc": [
                        553,
                        855,
                        938
                    ],
                    "errorMessage": "check self.map entry exists"
                },
                {
                    "pc": [
                        460,
                        630,
                        912
                    ],
                    "errorMessage": "check self.no_proxy exists"
                },
                {
                    "pc": [
                        962
                    ],
                    "errorMessage": "expected box == no_proxy"
                },
                {
                    "pc": [
                        950
                    ],
                    "errorMessage": "expected global == no_proxy"
                },
                {
                    "pc": [
                        944
                    ],
                    "errorMessage": "expected global assign == no_proxy"
                },
                {
                    "pc": [
                        956
                    ],
                    "errorMessage": "expected local == no_proxy"
                },
                {
                    "pc": [
                        966
                    ],
                    "errorMessage": "expected map == no_proxy"
                },
                {
                    "pc": [
                        593,
                        619,
                        646,
                        672,
                        700,
                        726,
                        758,
                        784,
                        811,
                        837,
                        871,
                        897
                    ],
                    "errorMessage": "index access is out of bounds"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAEAAECCCYJA2JveAhub19wcm94eQIAAAtnbG9iX2Fzc2lnbgRnbG9iA2xvYxEAAgAAAAAAAAABAAoAA2JhegoACG1vZGlmaWVkA21hcDEYQAADKSpnMRtBACQxGRREMRhEggMEUm6LvwSV/vE9BAwpREs2GgCOAwE2Ab8DDgAxGY0CACMAAQAxGEQrKmcnBCpnKLxIKCq/MQAnBSpmJwgxAFBJvEgqvyNDMRgUQ4oEAYAASYv+JAuL/CQLIosEiwMMQQAci/2LBElOAlmLAggWVwYCiwFMUIwBJAiMBEL/3Iv9FYwAIowEiwSLAgxBAByL/4sESU4CWYsACBZXBgKLAUxQjAEkCIwEQv/ci/yL/ggWVwYCiwFQi/2LA4sAUlCL/xWL/4sCTwJSUIwAiYoDAYv9UQACSReL/VcCAIv/JAtLAUxZi/8jCCQLSwJLAVlLAxVLBYv/CSMJSwFPA08CTUlLBAlOBov+FU4GSwQiTwVSi/5QTwRPAk8DUlBOAkwkC0yLBYsEDEEAIIsDSYsFSU4DWYsCCIsBCRZXBgJLAkxdjAMkCIwFQv/YiwCLA1CMAIkiK2VESSJZTFcCACMnBoj+6StMZyIpZURJIllMVwIAIycGiP7VKUxnIicEZURJIllMVwIAIycGiP7AJwRMZzEASSInBWNESSJZTFcCACMnBoj+pycFTGYovkRJIllMVwIAIycGiP6TKLxIKEy/JwgxAFBJvkRJIllMVwIAIycGiP54SwG8SL8jQyIrZURJVwIASwEiWUsBIllLASMJSwMVSwQkWU8CTU8DTgJSSSVZIkxYJwdQTEQiiP7AK0xnIillRElXAgBLASJZSwEiWUsBIwlLAxVLBCRZTwJNTwNOAlJJJVkiTFgnB1BMRCKI/ospTGciJwRlRElXAgBLASJZSwEiWUsBIwlLAxVLBCRZTwJNTwNOAlJJJVkiTFgnB1BMRCKI/lUnBExnMQBJIicFY0RJVwIASwEiWUsBIllLASMJSwMVSwQkWU8CTU8DTgJSSSVZIkxYJwdQTEQiiP4bJwVMZii+RElXAgBLASJZSwEiWUsBIwlLAxVLBCRZTwJNTwNOAlJJJVkiTFgnB1BMRCKI/eYovEgoTL8nCDEAUEm+RElXAgBLASJZSwEiWUsBIwlLAxVLBCRZTwJNTwNOAlJJJVkiTFgnB1BMRCKI/apLAbxIvyNDIillRCIrZUQiJwRlRDEAIicFY0QovkQnCDEAUL5ESwVPBRJESwRPBBJESwNPAxJESwJPAhJESwESRIAEFR98dUxQsCND",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}