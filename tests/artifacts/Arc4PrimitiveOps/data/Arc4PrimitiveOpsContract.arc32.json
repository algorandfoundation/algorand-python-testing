{
    "hints": {
        "verify_uintn_uintn_eq(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_uintn_eq(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_biguintn_eq(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_biguintn_eq(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_uintn_ne(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_uintn_ne(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_biguintn_ne(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_biguintn_ne(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_uintn_lt(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_uintn_lt(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_biguintn_lt(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_biguintn_lt(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_uintn_le(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_uintn_le(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_biguintn_le(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_biguintn_le(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_uintn_gt(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_uintn_gt(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_biguintn_gt(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_biguintn_gt(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_uintn_ge(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_uintn_ge(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_biguintn_ge(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_biguintn_ge(byte[],byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_init(byte[])uint32": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_init(byte[])uint256": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_from_bytes(byte[])uint32": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_from_bytes(byte[])uint256": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_uintn_from_log(byte[])uint32": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_biguintn_from_log(byte[])uint256": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ufixednxm_bytes(ufixed32x8)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bigufixednxm_bytes(ufixed256x16)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ufixednxm_from_bytes(byte[])ufixed32x8": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bigufixednxm_from_bytes(byte[])ufixed256x16": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_ufixednxm_from_log(byte[])ufixed32x8": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bigufixednxm_from_log(byte[])ufixed256x16": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_string_init(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_string_add(string,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_string_eq(string,string)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_string_bytes(string)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_string_from_bytes(byte[])string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_string_from_log(byte[])string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bool_bytes(bool)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bool_from_bytes(byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_bool_from_log(byte[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_emit(string,uint512,uint64,byte[],uint64,bool,byte[],string,uint64,uint256,ufixed32x8,ufixed256x16,bool,byte[],byte[],byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Arc4PrimitiveOpsContract",
        "methods": [
            {
                "name": "verify_uintn_uintn_eq",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguintn_uintn_eq",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uintn_biguintn_eq",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguintn_biguintn_eq",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uintn_uintn_ne",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguintn_uintn_ne",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uintn_biguintn_ne",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguintn_biguintn_ne",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uintn_uintn_lt",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguintn_uintn_lt",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uintn_biguintn_lt",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguintn_biguintn_lt",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uintn_uintn_le",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguintn_uintn_le",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uintn_biguintn_le",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguintn_biguintn_le",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uintn_uintn_gt",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguintn_uintn_gt",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uintn_biguintn_gt",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguintn_biguintn_gt",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uintn_uintn_ge",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguintn_uintn_ge",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uintn_biguintn_ge",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_biguintn_biguintn_ge",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    },
                    {
                        "type": "byte[]",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_uintn_init",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint32"
                }
            },
            {
                "name": "verify_biguintn_init",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint256"
                }
            },
            {
                "name": "verify_uintn_from_bytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint32"
                }
            },
            {
                "name": "verify_biguintn_from_bytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint256"
                }
            },
            {
                "name": "verify_uintn_from_log",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint32"
                }
            },
            {
                "name": "verify_biguintn_from_log",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint256"
                }
            },
            {
                "name": "verify_ufixednxm_bytes",
                "args": [
                    {
                        "type": "ufixed32x8",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_bigufixednxm_bytes",
                "args": [
                    {
                        "type": "ufixed256x16",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_ufixednxm_from_bytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "ufixed32x8"
                }
            },
            {
                "name": "verify_bigufixednxm_from_bytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "ufixed256x16"
                }
            },
            {
                "name": "verify_ufixednxm_from_log",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "ufixed32x8"
                }
            },
            {
                "name": "verify_bigufixednxm_from_log",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "ufixed256x16"
                }
            },
            {
                "name": "verify_string_init",
                "args": [
                    {
                        "type": "string",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "verify_string_add",
                "args": [
                    {
                        "type": "string",
                        "name": "a"
                    },
                    {
                        "type": "string",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "verify_string_eq",
                "args": [
                    {
                        "type": "string",
                        "name": "a"
                    },
                    {
                        "type": "string",
                        "name": "b"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_string_bytes",
                "args": [
                    {
                        "type": "string",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_string_from_bytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "verify_string_from_log",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "verify_bool_bytes",
                "args": [
                    {
                        "type": "bool",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "verify_bool_from_bytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_bool_from_log",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "a"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "verify_emit",
                "args": [
                    {
                        "type": "string",
                        "name": "a"
                    },
                    {
                        "type": "uint512",
                        "name": "b"
                    },
                    {
                        "type": "uint64",
                        "name": "c"
                    },
                    {
                        "type": "byte[]",
                        "name": "d"
                    },
                    {
                        "type": "uint64",
                        "name": "e"
                    },
                    {
                        "type": "bool",
                        "name": "f"
                    },
                    {
                        "type": "byte[]",
                        "name": "g"
                    },
                    {
                        "type": "string",
                        "name": "h"
                    },
                    {
                        "type": "uint64",
                        "name": "m"
                    },
                    {
                        "type": "uint256",
                        "name": "n"
                    },
                    {
                        "type": "ufixed32x8",
                        "name": "o"
                    },
                    {
                        "type": "ufixed256x16",
                        "name": "p"
                    },
                    {
                        "type": "bool",
                        "name": "q"
                    },
                    {
                        "type": "byte[]",
                        "name": "r"
                    },
                    {
                        "type": "byte[]",
                        "name": "s"
                    },
                    {
                        "type": "byte[]",
                        "name": "t"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}