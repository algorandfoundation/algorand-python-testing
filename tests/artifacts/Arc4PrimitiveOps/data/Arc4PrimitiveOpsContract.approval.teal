#pragma version 11
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1 8 64 0
    bytecblock 0x151f7c75 0x00
    // tests/artifacts/Arc4PrimitiveOps/contract.py:6
    // class Arc4PrimitiveOpsContract(ARC4Contract):
    txn NumAppArgs
    bz main___algopy_default_create@57
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0x96f14116 0xed666096 0x2ca0352b 0x85907d40 0x2cbec45b 0x07666fd9 0x370babd3 0x2b6b3ef0 0x339da97c 0x7898ed97 0x1f130cec 0xc748664e 0x7a460cb1 0xdcab1f01 0x97d9064d 0xce06c2a0 0xdcdbcee0 0x77a4b68d 0x4f540626 0x095aed41 0xe3b7e918 0x55337008 0x9bb1cd66 0x81484d9d 0x9a03df10 0xd3f0e44b 0x982db233 0xaffbdf0e 0x288af76e 0x8bd84a04 0x302b8a0a 0x337ae20b 0x6e259270 0x79e35f77 0x0f1574fe 0xb2cb13be 0xd059eea7 0x4cc4c157 0x3d17ac6e 0xf7f3d5fc 0xf8c8f8d5 0x43f7162a 0x42e09075 0xd956f575 0x6c0160df 0xa890150b 0x0b2f4c3f 0x9db9d327 0xe4d950a1 0xb605e80c // method "verify_uintn_uintn_eq(byte[],byte[])bool", method "verify_biguintn_uintn_eq(byte[],byte[])bool", method "verify_uintn_biguintn_eq(byte[],byte[])bool", method "verify_biguintn_biguintn_eq(byte[],byte[])bool", method "verify_uintn_uintn_ne(byte[],byte[])bool", method "verify_biguintn_uintn_ne(byte[],byte[])bool", method "verify_uintn_biguintn_ne(byte[],byte[])bool", method "verify_biguintn_biguintn_ne(byte[],byte[])bool", method "verify_uintn_uintn_lt(byte[],byte[])bool", method "verify_biguintn_uintn_lt(byte[],byte[])bool", method "verify_uintn_biguintn_lt(byte[],byte[])bool", method "verify_biguintn_biguintn_lt(byte[],byte[])bool", method "verify_uintn_uintn_le(byte[],byte[])bool", method "verify_biguintn_uintn_le(byte[],byte[])bool", method "verify_uintn_biguintn_le(byte[],byte[])bool", method "verify_biguintn_biguintn_le(byte[],byte[])bool", method "verify_uintn_uintn_gt(byte[],byte[])bool", method "verify_biguintn_uintn_gt(byte[],byte[])bool", method "verify_uintn_biguintn_gt(byte[],byte[])bool", method "verify_biguintn_biguintn_gt(byte[],byte[])bool", method "verify_uintn_uintn_ge(byte[],byte[])bool", method "verify_biguintn_uintn_ge(byte[],byte[])bool", method "verify_uintn_biguintn_ge(byte[],byte[])bool", method "verify_biguintn_biguintn_ge(byte[],byte[])bool", method "verify_uintn_init(byte[])uint32", method "verify_biguintn_init(byte[])uint256", method "verify_uintn_from_bytes(byte[])uint32", method "verify_biguintn_from_bytes(byte[])uint256", method "verify_uintn_from_log(byte[])uint32", method "verify_biguintn_from_log(byte[])uint256", method "verify_biguintn_as_uint64(byte[])uint64", method "verify_biguintn_as_biguint(byte[])uint512", method "verify_uintn64_as_uint64(byte[])uint64", method "verify_uintn64_as_biguint(byte[])uint512", method "verify_ufixednxm_bytes(ufixed32x8)byte[]", method "verify_bigufixednxm_bytes(ufixed256x16)byte[]", method "verify_ufixednxm_from_bytes(byte[])ufixed32x8", method "verify_bigufixednxm_from_bytes(byte[])ufixed256x16", method "verify_ufixednxm_from_log(byte[])ufixed32x8", method "verify_bigufixednxm_from_log(byte[])ufixed256x16", method "verify_string_init(string)string", method "verify_string_add(string,string)string", method "verify_string_eq(string,string)bool", method "verify_string_bytes(string)byte[]", method "verify_string_from_bytes(byte[])string", method "verify_string_from_log(byte[])string", method "verify_bool_bytes(bool)byte[]", method "verify_bool_from_bytes(byte[])bool", method "verify_bool_from_log(byte[])bool", method "verify_emit(string,uint512,uint64,byte[],uint64,bool,byte[],string,uint64,uint256,ufixed32x8,ufixed256x16,bool,byte[],byte[],byte[])void"
    txna ApplicationArgs 0
    match verify_uintn_uintn_eq verify_biguintn_uintn_eq verify_uintn_biguintn_eq verify_biguintn_biguintn_eq verify_uintn_uintn_ne verify_biguintn_uintn_ne verify_uintn_biguintn_ne verify_biguintn_biguintn_ne verify_uintn_uintn_lt verify_biguintn_uintn_lt verify_uintn_biguintn_lt verify_biguintn_biguintn_lt verify_uintn_uintn_le verify_biguintn_uintn_le verify_uintn_biguintn_le verify_biguintn_biguintn_le verify_uintn_uintn_gt verify_biguintn_uintn_gt verify_uintn_biguintn_gt verify_biguintn_biguintn_gt verify_uintn_uintn_ge verify_biguintn_uintn_ge verify_uintn_biguintn_ge verify_biguintn_biguintn_ge verify_uintn_init verify_biguintn_init verify_uintn_from_bytes verify_biguintn_from_bytes verify_uintn_from_log verify_biguintn_from_log verify_biguintn_as_uint64 verify_biguintn_as_biguint verify_uintn64_as_uint64 verify_uintn64_as_biguint verify_ufixednxm_bytes verify_bigufixednxm_bytes verify_ufixednxm_from_bytes verify_bigufixednxm_from_bytes verify_ufixednxm_from_log verify_bigufixednxm_from_log verify_string_init verify_string_add verify_string_eq verify_string_bytes verify_string_from_bytes verify_string_from_log verify_bool_bytes verify_bool_from_bytes verify_bool_from_log verify_emit
    err

main___algopy_default_create@57:
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_eq[routing]() -> void:
verify_uintn_uintn_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:7
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:11
    // return arc4.UInt64(a_biguint) == arc4.UInt64(b_biguint)
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    dig 1
    b|
    dig 2
    len
    intc_1 // 8
    <=
    assert // overflow
    cover 2
    b|
    b==
    // tests/artifacts/Arc4PrimitiveOps/contract.py:7
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_eq[routing]() -> void:
verify_biguintn_uintn_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:13
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:17
    // return arc4.UInt512(a_biguint) == arc4.UInt64(b_biguint)
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    b|
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    b|
    b==
    // tests/artifacts/Arc4PrimitiveOps/contract.py:13
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_eq[routing]() -> void:
verify_uintn_biguintn_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:19
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:23
    // return arc4.UInt64(a_biguint) == arc4.UInt512(b_biguint)
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    b|
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    b|
    b==
    // tests/artifacts/Arc4PrimitiveOps/contract.py:19
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_eq[routing]() -> void:
verify_biguintn_biguintn_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:25
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:29
    // return arc4.UInt512(a_biguint) == arc4.UInt512(b_biguint)
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    dig 1
    b|
    dig 2
    len
    intc_2 // 64
    <=
    assert // overflow
    cover 2
    b|
    b==
    // tests/artifacts/Arc4PrimitiveOps/contract.py:25
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_ne[routing]() -> void:
verify_uintn_uintn_ne:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:31
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:35
    // return arc4.UInt64(a_biguint) != arc4.UInt64(b_biguint)
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    dig 1
    b|
    dig 2
    len
    intc_1 // 8
    <=
    assert // overflow
    cover 2
    b|
    b!=
    // tests/artifacts/Arc4PrimitiveOps/contract.py:31
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_ne[routing]() -> void:
verify_biguintn_uintn_ne:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:37
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:41
    // return arc4.UInt512(a_biguint) != arc4.UInt64(b_biguint)
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    b|
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    b|
    b!=
    // tests/artifacts/Arc4PrimitiveOps/contract.py:37
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_ne[routing]() -> void:
verify_uintn_biguintn_ne:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:43
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:47
    // return arc4.UInt64(a_biguint) != arc4.UInt512(b_biguint)
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    b|
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    b|
    b!=
    // tests/artifacts/Arc4PrimitiveOps/contract.py:43
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_ne[routing]() -> void:
verify_biguintn_biguintn_ne:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:49
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:53
    // return arc4.UInt512(a_biguint) != arc4.UInt512(b_biguint)
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    dig 1
    b|
    dig 2
    len
    intc_2 // 64
    <=
    assert // overflow
    cover 2
    b|
    b!=
    // tests/artifacts/Arc4PrimitiveOps/contract.py:49
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_lt[routing]() -> void:
verify_uintn_uintn_lt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:55
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:59
    // return arc4.UInt64(a_biguint) < arc4.UInt64(b_biguint)
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    dig 1
    b|
    dig 2
    len
    intc_1 // 8
    <=
    assert // overflow
    cover 2
    b|
    b<
    // tests/artifacts/Arc4PrimitiveOps/contract.py:55
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_lt[routing]() -> void:
verify_biguintn_uintn_lt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:61
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:65
    // return arc4.UInt512(a_biguint) < arc4.UInt64(b_biguint)
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    b|
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    b|
    b<
    // tests/artifacts/Arc4PrimitiveOps/contract.py:61
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_lt[routing]() -> void:
verify_uintn_biguintn_lt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:67
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:71
    // return arc4.UInt64(a_biguint) < arc4.UInt512(b_biguint)
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    b|
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    b|
    b<
    // tests/artifacts/Arc4PrimitiveOps/contract.py:67
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_lt[routing]() -> void:
verify_biguintn_biguintn_lt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:73
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:77
    // return arc4.UInt512(a_biguint) < arc4.UInt512(b_biguint)
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    dig 1
    b|
    dig 2
    len
    intc_2 // 64
    <=
    assert // overflow
    cover 2
    b|
    b<
    // tests/artifacts/Arc4PrimitiveOps/contract.py:73
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_le[routing]() -> void:
verify_uintn_uintn_le:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:79
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:83
    // return arc4.UInt64(a_biguint) <= arc4.UInt64(b_biguint)
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    dig 1
    b|
    dig 2
    len
    intc_1 // 8
    <=
    assert // overflow
    cover 2
    b|
    b<=
    // tests/artifacts/Arc4PrimitiveOps/contract.py:79
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_le[routing]() -> void:
verify_biguintn_uintn_le:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:85
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:89
    // return arc4.UInt512(a_biguint) <= arc4.UInt64(b_biguint)
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    b|
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    b|
    b<=
    // tests/artifacts/Arc4PrimitiveOps/contract.py:85
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_le[routing]() -> void:
verify_uintn_biguintn_le:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:91
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:95
    // return arc4.UInt64(a_biguint) <= arc4.UInt512(b_biguint)
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    b|
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    b|
    b<=
    // tests/artifacts/Arc4PrimitiveOps/contract.py:91
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_le[routing]() -> void:
verify_biguintn_biguintn_le:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:97
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:101
    // return arc4.UInt512(a_biguint) <= arc4.UInt512(b_biguint)
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    dig 1
    b|
    dig 2
    len
    intc_2 // 64
    <=
    assert // overflow
    cover 2
    b|
    b<=
    // tests/artifacts/Arc4PrimitiveOps/contract.py:97
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_gt[routing]() -> void:
verify_uintn_uintn_gt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:103
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:107
    // return arc4.UInt64(a_biguint) > arc4.UInt64(b_biguint)
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    dig 1
    b|
    dig 2
    len
    intc_1 // 8
    <=
    assert // overflow
    cover 2
    b|
    b>
    // tests/artifacts/Arc4PrimitiveOps/contract.py:103
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_gt[routing]() -> void:
verify_biguintn_uintn_gt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:109
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:113
    // return arc4.UInt512(a_biguint) > arc4.UInt64(b_biguint)
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    b|
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    b|
    b>
    // tests/artifacts/Arc4PrimitiveOps/contract.py:109
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_gt[routing]() -> void:
verify_uintn_biguintn_gt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:115
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:119
    // return arc4.UInt64(a_biguint) > arc4.UInt512(b_biguint)
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    b|
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    b|
    b>
    // tests/artifacts/Arc4PrimitiveOps/contract.py:115
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_gt[routing]() -> void:
verify_biguintn_biguintn_gt:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:121
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:125
    // return arc4.UInt512(a_biguint) > arc4.UInt512(b_biguint)
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    dig 1
    b|
    dig 2
    len
    intc_2 // 64
    <=
    assert // overflow
    cover 2
    b|
    b>
    // tests/artifacts/Arc4PrimitiveOps/contract.py:121
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_uintn_ge[routing]() -> void:
verify_uintn_uintn_ge:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:127
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:131
    // return arc4.UInt64(a_biguint) >= arc4.UInt64(b_biguint)
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    dig 1
    b|
    dig 2
    len
    intc_1 // 8
    <=
    assert // overflow
    cover 2
    b|
    b>=
    // tests/artifacts/Arc4PrimitiveOps/contract.py:127
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_uintn_ge[routing]() -> void:
verify_biguintn_uintn_ge:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:133
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:137
    // return arc4.UInt512(a_biguint) >= arc4.UInt64(b_biguint)
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    b|
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    b|
    b>=
    // tests/artifacts/Arc4PrimitiveOps/contract.py:133
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_biguintn_ge[routing]() -> void:
verify_uintn_biguintn_ge:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:139
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:143
    // return arc4.UInt64(a_biguint) >= arc4.UInt512(b_biguint)
    dig 1
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    uncover 2
    b|
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    b|
    b>=
    // tests/artifacts/Arc4PrimitiveOps/contract.py:139
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_biguintn_ge[routing]() -> void:
verify_biguintn_biguintn_ge:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:145
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:149
    // return arc4.UInt512(a_biguint) >= arc4.UInt512(b_biguint)
    dig 1
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    uncover 2
    dig 1
    b|
    dig 2
    len
    intc_2 // 64
    <=
    assert // overflow
    cover 2
    b|
    b>=
    // tests/artifacts/Arc4PrimitiveOps/contract.py:145
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_init[routing]() -> void:
verify_uintn_init:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:151
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:154
    // return arc4.UInt32(a_biguint)
    dup
    len
    pushint 4 // 4
    <=
    assert // overflow
    pushint 4 // 4
    bzero
    b|
    // tests/artifacts/Arc4PrimitiveOps/contract.py:151
    // @arc4.abimethod()
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_init[routing]() -> void:
verify_biguintn_init:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:156
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:159
    // return arc4.UInt256(a_biguint)
    dup
    len
    pushint 32 // 32
    <=
    assert // overflow
    pushint 32 // 32
    bzero
    b|
    // tests/artifacts/Arc4PrimitiveOps/contract.py:156
    // @arc4.abimethod()
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_from_bytes[routing]() -> void:
verify_uintn_from_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:161
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_from_bytes[routing]() -> void:
verify_biguintn_from_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:165
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn_from_log[routing]() -> void:
verify_uintn_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:169
    // @arc4.abimethod()
    txna ApplicationArgs 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:171
    // return arc4.UInt32.from_log(a)
    dup
    extract 6 0
    swap
    extract 2 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    // tests/artifacts/Arc4PrimitiveOps/contract.py:169
    // @arc4.abimethod()
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_from_log[routing]() -> void:
verify_biguintn_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:173
    // @arc4.abimethod()
    txna ApplicationArgs 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:175
    // return arc4.UInt256.from_log(a)
    dup
    extract 6 0
    swap
    extract 2 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    // tests/artifacts/Arc4PrimitiveOps/contract.py:173
    // @arc4.abimethod()
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_as_uint64[routing]() -> void:
verify_biguintn_as_uint64:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:177
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:180
    // return arc4.UInt256(a_biguint).as_uint64()
    dup
    len
    pushint 32 // 32
    <=
    assert // overflow
    pushint 32 // 32
    bzero
    b|
    dup
    bitlen
    intc_2 // 64
    <=
    assert // overflow
    dup
    len
    intc_1 // 8
    -
    intc_1 // 8
    // tests/artifacts/Arc4PrimitiveOps/contract.py:177
    // @arc4.abimethod()
    extract3
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_biguintn_as_biguint[routing]() -> void:
verify_biguintn_as_biguint:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:182
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:185
    // return arc4.UInt256(a_biguint).as_biguint()
    dup
    len
    pushint 32 // 32
    <=
    assert // overflow
    pushint 32 // 32
    bzero
    b|
    // tests/artifacts/Arc4PrimitiveOps/contract.py:182
    // @arc4.abimethod()
    dup
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    b|
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn64_as_uint64[routing]() -> void:
verify_uintn64_as_uint64:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:187
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:190
    // return arc4.UInt64(a_biguint).as_uint64()
    dup
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    b|
    // tests/artifacts/Arc4PrimitiveOps/contract.py:187
    // @arc4.abimethod()
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_uintn64_as_biguint[routing]() -> void:
verify_uintn64_as_biguint:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:192
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:195
    // return arc4.UInt64(a_biguint).as_biguint()
    dup
    len
    intc_1 // 8
    <=
    assert // overflow
    intc_1 // 8
    bzero
    b|
    // tests/artifacts/Arc4PrimitiveOps/contract.py:192
    // @arc4.abimethod()
    dup
    len
    intc_2 // 64
    <=
    assert // overflow
    intc_2 // 64
    bzero
    b|
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_ufixednxm_bytes[routing]() -> void:
verify_ufixednxm_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:197
    // @arc4.abimethod()
    txna ApplicationArgs 1
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_bigufixednxm_bytes[routing]() -> void:
verify_bigufixednxm_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:203
    // @arc4.abimethod()
    txna ApplicationArgs 1
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_ufixednxm_from_bytes[routing]() -> void:
verify_ufixednxm_from_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:209
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_bigufixednxm_from_bytes[routing]() -> void:
verify_bigufixednxm_from_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:215
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_ufixednxm_from_log[routing]() -> void:
verify_ufixednxm_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:221
    // @arc4.abimethod()
    txna ApplicationArgs 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:225
    // return arc4.UFixedNxM[typing.Literal[32], typing.Literal[8]].from_log(a)
    dup
    extract 6 0
    swap
    extract 2 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    // tests/artifacts/Arc4PrimitiveOps/contract.py:221
    // @arc4.abimethod()
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_bigufixednxm_from_log[routing]() -> void:
verify_bigufixednxm_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:227
    // @arc4.abimethod()
    txna ApplicationArgs 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:231
    // return arc4.BigUFixedNxM[typing.Literal[256], typing.Literal[16]].from_log(a)
    dup
    extract 6 0
    swap
    extract 2 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    // tests/artifacts/Arc4PrimitiveOps/contract.py:227
    // @arc4.abimethod()
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_string_init[routing]() -> void:
verify_string_init:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:233
    // @arc4.abimethod
    txna ApplicationArgs 1
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:235
    // result = arc4.String(String("Hello, ") + a)
    pushbytes "Hello, "
    swap
    concat
    dup
    len
    itob
    extract 6 2
    swap
    concat
    // tests/artifacts/Arc4PrimitiveOps/contract.py:233
    // @arc4.abimethod
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_string_add[routing]() -> void:
verify_string_add:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:238
    // @arc4.abimethod
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    // tests/artifacts/Arc4PrimitiveOps/contract.py:240
    // result = a + b
    extract 2 0
    concat // on error: max array length exceeded
    dup
    extract 2 0
    len
    itob
    extract 6 2
    replace2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:238
    // @arc4.abimethod
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_string_eq[routing]() -> void:
verify_string_eq:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:243
    // @arc4.abimethod()
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    // tests/artifacts/Arc4PrimitiveOps/contract.py:245
    // return a == b
    ==
    // tests/artifacts/Arc4PrimitiveOps/contract.py:243
    // @arc4.abimethod()
    bytec_1 // 0x00
    intc_3 // 0
    uncover 2
    setbit
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_string_bytes[routing]() -> void:
verify_string_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:247
    // @arc4.abimethod()
    txna ApplicationArgs 1
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_string_from_bytes[routing]() -> void:
verify_string_from_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:252
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_string_from_log[routing]() -> void:
verify_string_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:256
    // @arc4.abimethod()
    txna ApplicationArgs 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:258
    // return arc4.String.from_log(a)
    dup
    extract 6 0
    swap
    extract 2 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    // tests/artifacts/Arc4PrimitiveOps/contract.py:256
    // @arc4.abimethod()
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_bool_bytes[routing]() -> void:
verify_bool_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:260
    // @arc4.abimethod()
    txna ApplicationArgs 1
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_bool_from_bytes[routing]() -> void:
verify_bool_from_bytes:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:264
    // @arc4.abimethod()
    txna ApplicationArgs 1
    extract 2 0
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_bool_from_log[routing]() -> void:
verify_bool_from_log:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:268
    // @arc4.abimethod()
    txna ApplicationArgs 1
    // tests/artifacts/Arc4PrimitiveOps/contract.py:270
    // return arc4.Bool.from_log(a)
    dup
    extract 6 0
    swap
    extract 2 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    // tests/artifacts/Arc4PrimitiveOps/contract.py:268
    // @arc4.abimethod()
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return


// tests.artifacts.Arc4PrimitiveOps.contract.Arc4PrimitiveOpsContract.verify_emit[routing]() -> void:
verify_emit:
    // tests/artifacts/Arc4PrimitiveOps/contract.py:272
    // @arc4.abimethod()
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    txna ApplicationArgs 4
    txna ApplicationArgs 5
    txna ApplicationArgs 6
    txna ApplicationArgs 7
    txna ApplicationArgs 8
    txna ApplicationArgs 9
    txna ApplicationArgs 10
    txna ApplicationArgs 11
    txna ApplicationArgs 12
    txna ApplicationArgs 13
    txna ApplicationArgs 14
    extract 2 0
    txna ApplicationArgs 15
    dup
    intc_3 // 0
    extract_uint16
    dig 1
    pushint 2 // 2
    extract_uint16
    substring3
    extract 2 0
    txna ApplicationArgs 15
    dup
    pushint 2 // 2
    extract_uint16
    dig 1
    len
    substring3
    extract 2 0
    // tests/artifacts/Arc4PrimitiveOps/contract.py:296
    // arc4.emit(SwappedArc4(m, n, o, p, q, arc4_r, arc4_s, arc4_t))
    dig 7
    dig 7
    concat
    dig 6
    concat
    dig 5
    concat
    dig 4
    concat
    dig 3
    concat
    pushbytes 0x0054
    concat
    dig 2
    len
    pushint 84 // 84
    dig 1
    +
    itob
    extract 6 2
    uncover 2
    swap
    concat
    dig 3
    concat
    dig 2
    concat
    pushbytes 0x66bb0333 // method "SwappedArc4(uint64,uint256,ufixed32x8,ufixed256x16,bool,uint8[3],uint16[],(uint32,uint64,string))"
    swap
    concat
    log
    // tests/artifacts/Arc4PrimitiveOps/contract.py:297-315
    // arc4.emit(
    //     "Swapped",
    //     a,
    //     b,
    //     c,
    //     d.copy(),
    //     e,
    //     f,
    //     g.copy(),
    //     h,
    //     m,
    //     n,
    //     o,
    //     p,
    //     q,
    //     arc4_r.copy(),
    //     arc4_s.copy(),
    //     arc4_t,
    // )
    dig 16
    len
    pushint 173 // 173
    +
    pushbytes 0x00ad
    uncover 17
    concat
    uncover 16
    concat
    dig 1
    itob
    extract 6 2
    concat
    dig 15
    len
    uncover 2
    +
    swap
    uncover 14
    concat
    uncover 13
    concat
    dig 1
    itob
    extract 6 2
    concat
    dig 12
    len
    uncover 2
    +
    dup
    itob
    extract 6 2
    uncover 2
    swap
    concat
    dig 11
    len
    uncover 2
    +
    swap
    uncover 10
    concat
    uncover 9
    concat
    uncover 8
    concat
    uncover 7
    concat
    uncover 6
    concat
    uncover 5
    concat
    dig 1
    itob
    extract 6 2
    concat
    swap
    uncover 2
    +
    itob
    extract 6 2
    concat
    uncover 6
    concat
    uncover 5
    concat
    uncover 4
    concat
    uncover 3
    concat
    uncover 2
    concat
    swap
    concat
    pushbytes 0xec3319bb // method "Swapped(string,uint512,uint64,byte[],uint64,bool,byte[],string,uint64,uint256,ufixed32x8,ufixed256x16,bool,uint8[3],uint16[],(uint32,uint64,string))"
    swap
    concat
    dup
    log
    // tests/artifacts/Arc4PrimitiveOps/contract.py:316-334
    // arc4.emit(
    //     "Swapped(string,uint512,uint64,byte[],uint64,bool,byte[],string,uint64,uint256,ufixed32x8,ufixed256x16,bool,uint8[3],uint16[],(uint32,uint64,string))",
    //     a,
    //     b,
    //     c,
    //     d.copy(),
    //     e,
    //     f,
    //     g.copy(),
    //     h,
    //     m,
    //     n,
    //     o,
    //     p,
    //     q,
    //     arc4_r.copy(),
    //     arc4_s.copy(),
    //     arc4_t,
    // )
    log
    // tests/artifacts/Arc4PrimitiveOps/contract.py:272
    // @arc4.abimethod()
    intc_0 // 1
    return
